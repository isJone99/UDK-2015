#
#  Copyright (c) 2015, Hewlett-Packard Development Company, L.P.<BR>
#  Copyright (c) 2006 - 2015, Intel Corporation. All rights reserved.<BR>
#  Portions copyright (c) 2008 - 2009, Apple Inc. All rights reserved.<BR>
#  Portions copyright (c) 2011 - 2014, ARM Ltd. All rights reserved.<BR>
#
#  This program and the accompanying materials
#  are licensed and made available under the terms and conditions of the BSD License
#  which accompanies this distribution.  The full text of the license may be found at
#  http://opensource.org/licenses/bsd-license.php
#
#  THE PROGRAM IS DISTRIBUTED UNDER THE BSD LICENSE ON AN "AS IS" BASIS,
#  WITHOUT WARRANTIES OR REPRESENTATIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED.
#

IDENTIFIER = Default TOOL_CHAIN_CONF

# common path macros

DEFINE VS2008_BIN                 = C:\Program Files\Microsoft Visual Studio 9.0\Vc\bin
DEFINE VS2008_DLL                 = C:\Program Files\Microsoft Visual Studio 9.0\Common7\IDE;DEF(VS2008_BIN)
DEFINE VS2008_BINX64              = DEF(VS2008_BIN)\x86_amd64
DEFINE VS2008_BIN64               = DEF(VS2008_BIN)\x86_ia64

DEFINE VS2008x86_BIN              = C:\Program Files (x86)\Microsoft Visual Studio 9.0\Vc\bin
DEFINE VS2008x86_DLL              = C:\Program Files (x86)\Microsoft Visual Studio 9.0\Common7\IDE;DEF(VS2008x86_BIN)
DEFINE VS2008x86_BINX64           = DEF(VS2008x86_BIN)\x86_amd64
DEFINE VS2008x86_BIN64            = DEF(VS2008x86_BIN)\x86_ia64

DEFINE VS2010_BIN                 = C:\Program Files\Microsoft Visual Studio 10.0\Vc\bin
DEFINE VS2010_DLL                 = C:\Program Files\Microsoft Visual Studio 10.0\Common7\IDE;DEF(VS2010_BIN)
DEFINE VS2010_BINX64              = DEF(VS2010_BIN)\x86_amd64
DEFINE VS2010_BIN64               = DEF(VS2010_BIN)\x86_ia64

DEFINE VS2010x86_BIN              = C:\Program Files (x86)\Microsoft Visual Studio 10.0\Vc\bin
DEFINE VS2010x86_DLL              = C:\Program Files (x86)\Microsoft Visual Studio 10.0\Common7\IDE;DEF(VS2010x86_BIN)
DEFINE VS2010x86_BINX64           = DEF(VS2010x86_BIN)\x86_amd64
DEFINE VS2010x86_BIN64            = DEF(VS2010x86_BIN)\x86_ia64

# EBC
DEFINE EBC_BIN                    = C:\Program Files\Intel\EBC\Bin
DEFINE EBC_BINx86                 = C:\Program Files (x86)\Intel\EBC\Bin

# ELF
DEFINE ELFGCC_BIN                 = /usr/bin

# WINDDK
DEFINE WINDDK_BIN16               = C:\WINDDK\3790.1830\bin\bin16
DEFINE WINDDK_BIN32               = C:\WINDDK\3790.1830\bin\x86
DEFINE WINDDK_BINX64              = C:\WINDDK\3790.1830\bin\win64\x86\amd64
DEFINE WINDDK_BIN64               = C:\WINDDK\3790.1830\bin\win64\x86

# WINSDK
DEFINE VS2008_WINSDK_BIN          = c:\Program Files\Microsoft SDKs\Windows\v6.0A\bin
DEFINE VS2008_WINSDKx86_BIN       = c:\Program Files (x86)\Microsoft SDKs\Windows\v6.0A\bin
DEFINE VS2010_WINSDK_BIN          = c:\Program Files\Microsoft SDKs\Windows\v7.0A\Bin
DEFINE VS2010_WINSDKx86_BIN       = c:\Program Files (x86)\Microsoft SDKs\Windows\v7.0A\Bin

# ASL
DEFINE WIN_ASL_BIN_DIR            = C:\ASL
DEFINE WIN_IASL_BIN               = DEF(WIN_ASL_BIN_DIR)\iasl.exe
DEFINE WIN_ASL_BIN                = DEF(WIN_ASL_BIN_DIR)\asl.exe
DEFINE UNIX_IASL_BIN              = ENV(IASL_PREFIX)iasl

DEFINE IASL_FLAGS                 =
DEFINE IASL_OUTFLAGS              = -p
DEFINE MS_ASL_FLAGS               =
DEFINE MS_ASL_OUTFLAGS            = /Fo=

DEFINE DEFAULT_WIN_ASL_BIN        = DEF(WIN_IASL_BIN)
DEFINE DEFAULT_WIN_ASL_FLAGS      = DEF(IASL_FLAGS)
DEFINE DEFAULT_WIN_ASL_OUTFLAGS   = DEF(IASL_OUTFLAGS)

DEFINE MSFT_ASLPP_FLAGS           = /nologo /E /C /FIAutoGen.h
DEFINE MSFT_ASLCC_FLAGS           = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
DEFINE MSFT_ASLDLINK_FLAGS        = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE


####################################################################################
#
# format: TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE = <string>
# priority:
#         TARGET_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE (Highest)
#         ******_TOOLCHAIN_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         ******_*********_ARCH_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         ******_TOOLCHAIN_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_*********_****_COMMANDTYPE_ATTRIBUTE
#         ******_*********_****_COMMANDTYPE_ATTRIBUTE
#         TARGET_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         ******_TOOLCHAIN_ARCH_***********_ATTRIBUTE
#         TARGET_*********_ARCH_***********_ATTRIBUTE
#         ******_*********_ARCH_***********_ATTRIBUTE
#         TARGET_TOOLCHAIN_****_***********_ATTRIBUTE
#         ******_TOOLCHAIN_****_***********_ATTRIBUTE
#         TARGET_*********_****_***********_ATTRIBUTE
#         ******_*********_****_***********_ATTRIBUTE (Lowest)
#
####################################################################################
####################################################################################
#
# Supported Tool Chains
# =====================
#   VS2008      -win32-  Requires:
#                             Microsoft Visual Studio 2008 Team Suite Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2010      -win32-  Requires:
#                             Microsoft Visual Studio 2010 Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2008x86   -win64-  Requires:
#                             Microsoft Visual Studio 2008 (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads 
#   VS2010x86   -win64-  Requires:
#                             Microsoft Visual Studio 2010 (x86) Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   VS2008xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2008 Team Suite
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   VS2010xASL  -win32-  Requires:
#                             Microsoft Visual Studio 2010 Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi 
#  VS2008x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2008 (x86)
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#  VS2010x86xASL -win64- Requires:
#                             Microsoft Visual Studio 2010 (x86) Premium Edition
#                             Microsoft Windows Server 2003 Driver Development Kit(Microsoft WINDDK) version 3790.1830 
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   DDK3790     -win32-  Requires:
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#   DDK3790xASL -win32-  Requires:
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   UNIXGCC     -UNIX-   Requires:
#                             GCC 4.3.0
#                             binutils 2.20.51.0.5
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   GCC54       -Linux,Windows-  Requires:
#                             GCC 4.4 targeting x86_64-linux-gnu
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   XCLANG      -Linux,Windows-  Requires:
#                             OSX Clang, and GNU binutils targeting aarch64-linux-gnu
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   ELFGCC      -Linux-  Requires:
#                             GCC(this tool chain uses whatever version of gcc and binutils that is installed in /usr/bin)
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   RVCT        -win-   Requires:
#                             ARM C/C++ Compiler, 5.00
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Microsoft ASL ACPI Compiler (asl.exe) v4.0.0 from
#                               http://download.microsoft.com/download/2/c/1/2c16c7e0-96c1-40f5-81fc-3e4bf7b65496/microsoft_asl_compiler-v4-0-0.msi
#   RVCTLINUX   -unix-   Requires:
#                             ARM C/C++ Compiler, 5.00
#                        Optional:
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler from
#                               https://acpica.org/downloads
#   MYTOOLS     -win32-  Requires:
#                             Microsoft Visual Studio 2008 for IA32/X64
#                             Microsoft Windows Server 2003 Driver Development Kit (Microsoft WINDDK) version 3790.1830 for IPF
#                        Optional:
#                             Required to build EBC drivers:
#                               Intel(r) Compiler for Efi Byte Code (Intel(r) EBC Compiler)
#                             Required to build platforms or ACPI tables:
#                               Intel(r) ACPI Compiler (iasl.exe) from
#                               https://acpica.org/downloads
#
####################################################################################
####################################################################################
#
# Supported Tool Chain Family
# ===========================
#   MSFT           - Microsoft
#   GCC            - GNU GCC
#   RVCT           - ARM RealView Toolchain
####################################################################################
####################################################################################
#
# Other Supported Tools
# =====================
#   NASM 2.08 or later                 http://www.nasm.us/
#
####################################################################################
####################################################################################
#
# Intel EFI Byte Code Compiler (Template)
#
####################################################################################
# *_*_EBC_*_FAMILY                   = INTEL
#
# *_*_EBC_PP_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_CC_PATH                    = C:\Program Files\Intel\EBC\Bin\iec.exe
# *_*_EBC_SLINK_PATH                 = C:\Program Files\Intel\EBC\Bin\link.exe
#
# *_*_EBC_SLINK_FLAGS                = /lib /NOLOGO /MACHINE:EBC
# *_*_EBC_PP_FLAGS                   = /nologo /E /TC /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_CC_FLAGS                   = /nologo /FAcs /c /W3 /WX /FI$(DEST_DIR_DEBUG)/AutoGen.h
# *_*_EBC_DLINK_FLAGS                = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /MACHINE:EBC /OPT:REF /NODEFAULTLIB /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER
#
####################################################################################
#
# Intel ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = INTEL
#
# *_*_*_ASL_PATH                     = C:\ASL\iasl.exe
#
####################################################################################
#
# Microsoft ACPI Source Language Compiler (Template)
#
####################################################################################
# *_*_*_ASL_FAMILY                   = MSFT
#
# *_*_*_ASL_PATH                     = C:\ASL\asl.exe
#
####################################################################################

####################################################################################
#
# Microsoft Visual Studio 2008
#
#   VS2008  - Microsoft Visual Studio 2005 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2008           - Microsoft Visual Studio 2008 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2008_*_*_FAMILY               = MSFT

*_VS2008_*_MAKE_PATH              = DEF(VS2008_BIN)\nmake.exe
*_VS2008_*_MAKE_FLAGS             = /nologo
*_VS2008_*_RC_PATH                = DEF(VS2008_WINSDK_BIN)\rc.exe

*_VS2008_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2008_*_APP_FLAGS              = /nologo /E /TC
*_VS2008_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2008_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008_*_ASM16_PATH             = DEF(VS2008_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2008_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2008_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2008_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2008_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2008_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008_IA32_*_DLL               = DEF(VS2008_DLL)

*_VS2008_IA32_MAKE_PATH           = DEF(VS2008_BIN)\nmake.exe
*_VS2008_IA32_CC_PATH             = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_VFRPP_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_SLINK_PATH          = DEF(VS2008_BIN)\lib.exe
*_VS2008_IA32_DLINK_PATH          = DEF(VS2008_BIN)\link.exe
*_VS2008_IA32_APP_PATH            = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_PP_PATH             = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASM_PATH            = DEF(VS2008_BIN)\ml.exe
*_VS2008_IA32_ASLCC_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASLPP_PATH          = DEF(VS2008_BIN)\cl.exe
*_VS2008_IA32_ASLDLINK_PATH       = DEF(VS2008_BIN)\link.exe

      *_VS2008_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2008_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2008_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2008_IA32_NASM_FLAGS    = -Ox -f win32
  NOOPT_VS2008_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2008_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008_X64_*_DLL                = DEF(VS2008_DLL)

*_VS2008_X64_CC_PATH              = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_PP_PATH              = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_APP_PATH             = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_VFRPP_PATH           = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASM_PATH             = DEF(VS2008_BINX64)\ml64.exe
*_VS2008_X64_SLINK_PATH           = DEF(VS2008_BINX64)\lib.exe
*_VS2008_X64_DLINK_PATH           = DEF(VS2008_BINX64)\link.exe
*_VS2008_X64_ASLCC_PATH           = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASLPP_PATH           = DEF(VS2008_BINX64)\cl.exe
*_VS2008_X64_ASLDLINK_PATH        = DEF(VS2008_BINX64)\link.exe

  DEBUG_VS2008_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2008_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008_X64_NASM_FLAGS     = -Ox -f win64 -g
RELEASE_VS2008_X64_NASM_FLAGS     = -Ox -f win64
  NOOPT_VS2008_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2008_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008_IPF_*_DLL                = DEF(VS2008_DLL)

*_VS2008_IPF_PP_PATH              = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_APP_PATH             = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_VFRPP_PATH           = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_CC_PATH              = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASM_PATH             = DEF(VS2008_BIN64)\ias.exe
*_VS2008_IPF_SLINK_PATH           = DEF(VS2008_BIN64)\lib.exe
*_VS2008_IPF_DLINK_PATH           = DEF(VS2008_BIN64)\link.exe
*_VS2008_IPF_ASLCC_PATH           = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASLPP_PATH           = DEF(VS2008_BIN64)\cl.exe
*_VS2008_IPF_ASLDLINK_PATH        = DEF(VS2008_BIN64)\link.exe

  DEBUG_VS2008_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_VS2008_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_VS2008_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
  NOOPT_VS2008_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008_EBC_*_FAMILY             = INTEL
*_VS2008_EBC_*_DLL                = DEF(VS2008_DLL)

*_VS2008_EBC_MAKE_PATH            = DEF(VS2008_BIN)\nmake.exe
*_VS2008_EBC_PP_PATH              = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_VFRPP_PATH           = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_CC_PATH              = DEF(EBC_BIN)\iec.exe
*_VS2008_EBC_SLINK_PATH           = DEF(VS2008_BIN)\link.exe
*_VS2008_EBC_DLINK_PATH           = DEF(VS2008_BIN)\link.exe

*_VS2008_EBC_MAKE_FLAGS           = /nologo
*_VS2008_EBC_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_VS2008_EBC_CC_FLAGS             = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008_EBC_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008_EBC_SLINK_FLAGS          = /lib /NOLOGO /MACHINE:EBC
*_VS2008_EBC_DLINK_FLAGS          = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2008
#
#   VS2008  - Microsoft Visual Studio 2008 All Edition, including Standard, Professional, Express, TeamSuite
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2008xASL           - Microsoft Visual Studio 2008 ALL Edition, including Standard, Professional, Express, TeamSuite
*_VS2008xASL_*_*_FAMILY                 = MSFT

*_VS2008xASL_*_MAKE_PATH                = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_*_MAKE_FLAG                = /nologo
*_VS2008xASL_*_RC_PATH                  = DEF(VS2008_WINSDK_BIN)\rc.exe

*_VS2008xASL_*_SLINK_FLAGS              = /NOLOGO /LTCG
*_VS2008xASL_*_APP_FLAGS                = /nologo /E /TC
*_VS2008xASL_*_PP_FLAGS                 = /nologo /E /TC /FIAutoGen.h
*_VS2008xASL_*_VFRPP_FLAGS              = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008xASL_*_ASM16_PATH               = DEF(VS2008_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008xASL_*_ASL_PATH                 = DEF(WIN_ASL_BIN)
*_VS2008xASL_*_ASL_FLAGS                =
*_VS2008xASL_*_ASL_OUTFLAGS             = DEF(MS_ASL_OUTFLAGS)
*_VS2008xASL_*_ASLCC_FLAGS              = DEF(MSFT_ASLCC_FLAGS)
*_VS2008xASL_*_ASLPP_FLAGS              = DEF(MSFT_ASLPP_FLAGS)
*_VS2008xASL_*_ASLDLINK_FLAGS           = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008xASL_IA32_*_DLL                 = DEF(VS2008_DLL)

*_VS2008xASL_IA32_MAKE_PATH             = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_IA32_CC_PATH               = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_VFRPP_PATH            = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_SLINK_PATH            = DEF(VS2008_BIN)\lib.exe
*_VS2008xASL_IA32_DLINK_PATH            = DEF(VS2008_BIN)\link.exe
*_VS2008xASL_IA32_APP_PATH              = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_PP_PATH               = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASM_PATH              = DEF(VS2008_BIN)\ml.exe
*_VS2008xASL_IA32_ASLCC_PATH            = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASLPP_PATH            = DEF(VS2008_BIN)\cl.exe
*_VS2008xASL_IA32_ASLDLINK_PATH         = DEF(VS2008_BIN)\link.exe

      *_VS2008xASL_IA32_MAKE_FLAGS      = /nologo
  DEBUG_VS2008xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2008xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008xASL_IA32_NASM_FLAGS      = -Ox -f win32 -g
RELEASE_VS2008xASL_IA32_NASM_FLAGS      = -Ox -f win32
  NOOPT_VS2008xASL_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2008xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008xASL_X64_*_DLL                  = DEF(VS2008_DLL)

*_VS2008xASL_X64_CC_PATH                = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_PP_PATH                = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_APP_PATH               = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_VFRPP_PATH             = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASM_PATH               = DEF(VS2008_BINX64)\ml64.exe
*_VS2008xASL_X64_SLINK_PATH             = DEF(VS2008_BINX64)\lib.exe
*_VS2008xASL_X64_DLINK_PATH             = DEF(VS2008_BINX64)\link.exe
*_VS2008xASL_X64_ASLCC_PATH             = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASLPP_PATH             = DEF(VS2008_BINX64)\cl.exe
*_VS2008xASL_X64_ASLDLINK_PATH          = DEF(VS2008_BINX64)\link.exe

  DEBUG_VS2008xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2008xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008xASL_X64_NASM_FLAGS       = -Ox -f win64 -g
RELEASE_VS2008xASL_X64_NASM_FLAGS       = -Ox -f win64
  NOOPT_VS2008xASL_X64_NASM_FLAGS       = -O0 -f win64 -g

  DEBUG_VS2008xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008xASL_IPF_*_DLL                  = DEF(VS2008_DLL)

*_VS2008xASL_IPF_PP_PATH                = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_APP_PATH               = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_VFRPP_PATH             = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_CC_PATH                = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASM_PATH               = DEF(VS2008_BIN64)\ias.exe
*_VS2008xASL_IPF_SLINK_PATH             = DEF(VS2008_BIN64)\lib.exe
*_VS2008xASL_IPF_DLINK_PATH             = DEF(VS2008_BIN64)\link.exe
*_VS2008xASL_IPF_ASLCC_PATH             = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASLPP_PATH             = DEF(VS2008_BIN64)\cl.exe
*_VS2008xASL_IPF_ASLDLINK_PATH          = DEF(VS2008_BIN64)\link.exe

  DEBUG_VS2008xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_VS2008xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_VS2008xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
  NOOPT_VS2008xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008xASL_EBC_*_FAMILY               = INTEL
*_VS2008xASL_EBC_*_DLL                  = DEF(VS2008_DLL)

*_VS2008xASL_EBC_MAKE_PATH              = DEF(VS2008_BIN)\nmake.exe
*_VS2008xASL_EBC_PP_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_VFRPP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_CC_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2008xASL_EBC_SLINK_PATH             = DEF(VS2008_BIN)\link.exe
*_VS2008xASL_EBC_DLINK_PATH             = DEF(VS2008_BIN)\link.exe

*_VS2008xASL_EBC_MAKE_FLAGS             = /nologo
*_VS2008xASL_EBC_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2008xASL_EBC_CC_FLAGS               = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008xASL_EBC_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008xASL_EBC_SLINK_FLAGS            = /lib /NOLOGO /MACHINE:EBC
*_VS2008xASL_EBC_DLINK_FLAGS            = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2008x86       - Microsoft Visual Studio 2008 (x86) with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2008x86           - Microsoft Visual Studio 2008 (x86) ALL Edition with Intel ASL
*_VS2008x86_*_*_FAMILY                  = MSFT

*_VS2008x86_*_MAKE_PATH                 = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_*_MAKE_FLAG                 = /nologo
*_VS2008x86_*_RC_PATH                   = DEF(VS2008_WINSDKx86_BIN)\rc.exe

*_VS2008x86_*_MAKE_FLAGS                = /nologo
*_VS2008x86_*_SLINK_FLAGS               = /NOLOGO /LTCG
*_VS2008x86_*_APP_FLAGS                 = /nologo /E /TC
*_VS2008x86_*_PP_FLAGS                  = /nologo /E /TC /FIAutoGen.h
*_VS2008x86_*_VFRPP_FLAGS               = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008x86_*_ASM16_PATH                = DEF(VS2008x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008x86_*_ASL_PATH                  = DEF(WIN_IASL_BIN)
*_VS2008x86_*_ASL_FLAGS                 = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2008x86_*_ASL_OUTFLAGS              = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2008x86_*_ASLCC_FLAGS               = DEF(MSFT_ASLCC_FLAGS)
*_VS2008x86_*_ASLPP_FLAGS               = DEF(MSFT_ASLPP_FLAGS)
*_VS2008x86_*_ASLDLINK_FLAGS            = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008x86_IA32_*_DLL                  = DEF(VS2008x86_DLL)

*_VS2008x86_IA32_MAKE_PATH              = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_IA32_CC_PATH                = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_VFRPP_PATH             = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASLCC_PATH             = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASLPP_PATH             = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_SLINK_PATH             = DEF(VS2008x86_BIN)\lib.exe
*_VS2008x86_IA32_DLINK_PATH             = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_IA32_ASLDLINK_PATH          = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_IA32_APP_PATH               = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_PP_PATH                = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86_IA32_ASM_PATH               = DEF(VS2008x86_BIN)\ml.exe

      *_VS2008x86_IA32_MAKE_FLAGS       = /nologo
  DEBUG_VS2008x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2008x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008x86_IA32_NASM_FLAGS       = -Ox -f win32 -g
RELEASE_VS2008x86_IA32_NASM_FLAGS       = -Ox -f win32
  NOOPT_VS2008x86_IA32_NASM_FLAGS       = -O0 -f win32 -g

  DEBUG_VS2008x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008x86_X64_*_DLL                   = DEF(VS2008x86_DLL)

*_VS2008x86_X64_CC_PATH                 = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_PP_PATH                 = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_APP_PATH                = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_VFRPP_PATH              = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASLCC_PATH              = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASLPP_PATH              = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86_X64_ASM_PATH                = DEF(VS2008x86_BINX64)\ml64.exe
*_VS2008x86_X64_SLINK_PATH              = DEF(VS2008x86_BINX64)\lib.exe
*_VS2008x86_X64_DLINK_PATH              = DEF(VS2008x86_BINX64)\link.exe
*_VS2008x86_X64_ASLDLINK_PATH           = DEF(VS2008x86_BINX64)\link.exe

  DEBUG_VS2008x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2008x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008x86_X64_NASM_FLAGS        = -Ox -f win64 -g
RELEASE_VS2008x86_X64_NASM_FLAGS        = -Ox -f win64
  NOOPT_VS2008x86_X64_NASM_FLAGS        = -O0 -f win64 -g

  DEBUG_VS2008x86_X64_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86_X64_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2008x86_X64_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008x86_IPF_*_DLL                   = DEF(VS2008x86_DLL)

*_VS2008x86_IPF_PP_PATH                 = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_APP_PATH                = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_VFRPP_PATH              = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASLCC_PATH              = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASLPP_PATH              = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_CC_PATH                 = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86_IPF_ASM_PATH                = DEF(VS2008x86_BIN64)\ias.exe
*_VS2008x86_IPF_SLINK_PATH              = DEF(VS2008x86_BIN64)\lib.exe
*_VS2008x86_IPF_DLINK_PATH              = DEF(VS2008x86_BIN64)\link.exe
*_VS2008x86_IPF_ASLDLINK_PATH           = DEF(VS2008x86_BIN64)\link.exe

  DEBUG_VS2008x86_IPF_CC_FLAGS          = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008x86_IPF_CC_FLAGS          = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008x86_IPF_CC_FLAGS            = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008x86_IPF_ASM_FLAGS         = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008x86_IPF_ASM_FLAGS         = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008x86_IPF_ASM_FLAGS           = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008x86_IPF_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008x86_IPF_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008x86_IPF_DLINK_FLAGS         = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008x86_EBC_*_FAMILY                = INTEL
*_VS2008x86_EBC_*_DLL                   = DEF(VS2008x86_DLL)

*_VS2008x86_EBC_MAKE_PATH               = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86_EBC_PP_PATH                 = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_VFRPP_PATH              = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_CC_PATH                 = DEF(EBC_BINx86)\iec.exe
*_VS2008x86_EBC_SLINK_PATH              = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86_EBC_DLINK_PATH              = DEF(VS2008x86_BIN)\link.exe

*_VS2008x86_EBC_MAKE_FLAGS              = /nologo
*_VS2008x86_EBC_PP_FLAGS                = /nologo /E /TC /FIAutoGen.h
*_VS2008x86_EBC_CC_FLAGS                = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008x86_EBC_VFRPP_FLAGS             = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008x86_EBC_SLINK_FLAGS             = /lib /NOLOGO /MACHINE:EBC
*_VS2008x86_EBC_DLINK_FLAGS             = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2008x86xASL     - Microsoft Visual Studio 2008 with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2008x86xASL_*_*_FAMILY              = MSFT

*_VS2008x86xASL_*_MAKE_PATH             = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_*_MAKE_FLAG             = /nologo
*_VS2008x86xASL_*_RC_PATH               = DEF(VS2008_WINSDKx86_BIN)\rc.exe

*_VS2008x86xASL_*_MAKE_FLAGS            = /nologo
*_VS2008x86xASL_*_SLINK_FLAGS           = /NOLOGO /LTCG
*_VS2008x86xASL_*_APP_FLAGS             = /nologo /E /TC
*_VS2008x86xASL_*_PP_FLAGS              = /nologo /E /TC /FIAutoGen.h
*_VS2008x86xASL_*_VFRPP_FLAGS           = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2008x86xASL_*_ASM16_PATH            = DEF(VS2008x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2008x86xASL_*_ASL_PATH              = DEF(WIN_ASL_BIN)
*_VS2008x86xASL_*_ASL_FLAGS             = DEF(MS_ASL_FLAGS)
*_VS2008x86xASL_*_ASL_OUTFLAGS          = DEF(MS_ASL_OUTFLAGS)
*_VS2008x86xASL_*_ASLCC_FLAGS           = DEF(MSFT_ASLCC_FLAGS)
*_VS2008x86xASL_*_ASLPP_FLAGS           = DEF(MSFT_ASLPP_FLAGS)
*_VS2008x86xASL_*_ASLDLINK_FLAGS        = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2008x86xASL_IA32_*_DLL              = DEF(VS2008x86_DLL)

*_VS2008x86xASL_IA32_MAKE_PATH          = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_IA32_CC_PATH            = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_VFRPP_PATH         = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASLCC_PATH         = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASLPP_PATH         = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_SLINK_PATH         = DEF(VS2008x86_BIN)\lib.exe
*_VS2008x86xASL_IA32_DLINK_PATH         = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_IA32_ASLDLINK_PATH      = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_IA32_APP_PATH           = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_PP_PATH            = DEF(VS2008x86_BIN)\cl.exe
*_VS2008x86xASL_IA32_ASM_PATH           = DEF(VS2008x86_BIN)\ml.exe

      *_VS2008x86xASL_IA32_MAKE_FLAGS   = /nologo
  DEBUG_VS2008x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2008x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2008x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2008x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2008x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2008xASL_IA32_NASM_FLAGS      = -Ox -f win32 -g
RELEASE_VS2008xASL_IA32_NASM_FLAGS      = -Ox -f win32
  NOOPT_VS2008xASL_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2008x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2008x86xASL_X64_*_DLL               = DEF(VS2008x86_DLL)

*_VS2008x86xASL_X64_CC_PATH             = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_PP_PATH             = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_APP_PATH            = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_VFRPP_PATH          = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASLCC_PATH          = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASLPP_PATH          = DEF(VS2008x86_BINX64)\cl.exe
*_VS2008x86xASL_X64_ASM_PATH            = DEF(VS2008x86_BINX64)\ml64.exe
*_VS2008x86xASL_X64_SLINK_PATH          = DEF(VS2008x86_BINX64)\lib.exe
*_VS2008x86xASL_X64_DLINK_PATH          = DEF(VS2008x86_BINX64)\link.exe
*_VS2008x86xASL_X64_ASLDLINK_PATH       = DEF(VS2008x86_BINX64)\link.exe

  DEBUG_VS2008x86xASL_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2008x86xASL_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2008x86xASL_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2008x86xASL_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2008x86xASL_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2008x86xASL_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2008xASL_X64_NASM_FLAGS       = -Ox -f win64 -g
RELEASE_VS2008xASL_X64_NASM_FLAGS       = -Ox -f win64
  NOOPT_VS2008xASL_X64_NASM_FLAGS       = -O0 -f win64 -g

  DEBUG_VS2008x86xASL_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2008x86xASL_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2008x86xASL_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2008x86xASL_IPF_*_DLL               = DEF(VS2008x86_DLL)

*_VS2008x86xASL_IPF_PP_PATH             = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_APP_PATH            = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_VFRPP_PATH          = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASLCC_PATH          = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASLPP_PATH          = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_CC_PATH             = DEF(VS2008x86_BIN64)\cl.exe
*_VS2008x86xASL_IPF_ASM_PATH            = DEF(VS2008x86_BIN64)\ias.exe
*_VS2008x86xASL_IPF_SLINK_PATH          = DEF(VS2008x86_BIN64)\lib.exe
*_VS2008x86xASL_IPF_DLINK_PATH          = DEF(VS2008x86_BIN64)\link.exe
*_VS2008x86xASL_IPF_ASLDLINK_PATH       = DEF(VS2008x86_BIN64)\link.exe

  DEBUG_VS2008x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2008x86xASL_IPF_CC_FLAGS     = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2008x86xASL_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2008x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2008x86xASL_IPF_ASM_FLAGS    = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2008x86xASL_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2008x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2008x86xASL_IPF_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2008x86xASL_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2008x86xASL_EBC_*_FAMILY            = INTEL
*_VS2008x86xASL_EBC_*_DLL               = DEF(VS2008x86_DLL)

*_VS2008x86xASL_EBC_MAKE_PATH           = DEF(VS2008x86_BIN)\nmake.exe
*_VS2008x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2008x86xASL_EBC_SLINK_PATH          = DEF(VS2008x86_BIN)\link.exe
*_VS2008x86xASL_EBC_DLINK_PATH          = DEF(VS2008x86_BIN)\link.exe

*_VS2008x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2008x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2008x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2008x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2008x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2008x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2010
#
#   VS2010  - Microsoft Visual Studio 2010 Premium Edition with Intel ASL
#   ASL     - Intel ACPI Source Language Compiler
####################################################################################
#   VS2010           - Microsoft Visual Studio 2010 Premium Edition
*_VS2010_*_*_FAMILY               = MSFT

*_VS2010_*_MAKE_PATH              = DEF(VS2010_BIN)\nmake.exe
*_VS2010_*_MAKE_FLAGS             = /nologo
*_VS2010_*_RC_PATH                = DEF(VS2010_WINSDK_BIN)\rc.exe

*_VS2010_*_SLINK_FLAGS            = /NOLOGO /LTCG
*_VS2010_*_APP_FLAGS              = /nologo /E /TC
*_VS2010_*_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2010_*_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010_*_ASM16_PATH             = DEF(VS2010_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010_*_ASL_PATH               = DEF(DEFAULT_WIN_ASL_BIN)
*_VS2010_*_ASL_FLAGS              = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2010_*_ASL_OUTFLAGS           = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2010_*_ASLCC_FLAGS            = DEF(MSFT_ASLCC_FLAGS)
*_VS2010_*_ASLPP_FLAGS            = DEF(MSFT_ASLPP_FLAGS)
*_VS2010_*_ASLDLINK_FLAGS         = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010_IA32_*_DLL               = DEF(VS2010_DLL)

*_VS2010_IA32_MAKE_PATH           = DEF(VS2010_BIN)\nmake.exe
*_VS2010_IA32_CC_PATH             = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_VFRPP_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_SLINK_PATH          = DEF(VS2010_BIN)\lib.exe
*_VS2010_IA32_DLINK_PATH          = DEF(VS2010_BIN)\link.exe
*_VS2010_IA32_APP_PATH            = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_PP_PATH             = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASM_PATH            = DEF(VS2010_BIN)\ml.exe
*_VS2010_IA32_ASLCC_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASLPP_PATH          = DEF(VS2010_BIN)\cl.exe
*_VS2010_IA32_ASLDLINK_PATH       = DEF(VS2010_BIN)\link.exe

      *_VS2010_IA32_MAKE_FLAGS    = /nologo
  DEBUG_VS2010_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010_IA32_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2010_IA32_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010_IA32_NASM_FLAGS    = -Ox -f win32 -g
RELEASE_VS2010_IA32_NASM_FLAGS    = -Ox -f win32
  NOOPT_VS2010_IA32_NASM_FLAGS    = -O0 -f win32 -g

  DEBUG_VS2010_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010_IA32_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010_X64_*_DLL                = DEF(VS2010_DLL)

*_VS2010_X64_CC_PATH              = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_PP_PATH              = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_APP_PATH             = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_VFRPP_PATH           = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASM_PATH             = DEF(VS2010_BINX64)\ml64.exe
*_VS2010_X64_SLINK_PATH           = DEF(VS2010_BINX64)\lib.exe
*_VS2010_X64_DLINK_PATH           = DEF(VS2010_BINX64)\link.exe
*_VS2010_X64_ASLCC_PATH           = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASLPP_PATH           = DEF(VS2010_BINX64)\cl.exe
*_VS2010_X64_ASLDLINK_PATH        = DEF(VS2010_BINX64)\link.exe

  DEBUG_VS2010_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010_X64_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2010_X64_ASM_FLAGS      = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010_X64_NASM_FLAGS     = -Ox -f win64 -g
RELEASE_VS2010_X64_NASM_FLAGS     = -Ox -f win64
  NOOPT_VS2010_X64_NASM_FLAGS     = -O0 -f win64 -g

  DEBUG_VS2010_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010_X64_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010_IPF_*_DLL                = DEF(VS2010_DLL)

*_VS2010_IPF_PP_PATH              = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_APP_PATH             = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_VFRPP_PATH           = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_CC_PATH              = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASM_PATH             = DEF(VS2010_BIN64)\ias.exe
*_VS2010_IPF_SLINK_PATH           = DEF(VS2010_BIN64)\lib.exe
*_VS2010_IPF_DLINK_PATH           = DEF(VS2010_BIN64)\link.exe
*_VS2010_IPF_ASLCC_PATH           = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASLPP_PATH           = DEF(VS2010_BIN64)\cl.exe
*_VS2010_IPF_ASLDLINK_PATH        = DEF(VS2010_BIN64)\link.exe

  DEBUG_VS2010_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_VS2010_IPF_CC_FLAGS       = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_VS2010_IPF_ASM_FLAGS      = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
  NOOPT_VS2010_IPF_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010_EBC_*_FAMILY             = INTEL
*_VS2010_EBC_*_DLL                = DEF(VS2010_DLL)

*_VS2010_EBC_MAKE_PATH            = DEF(VS2010_BIN)\nmake.exe
*_VS2010_EBC_PP_PATH              = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_VFRPP_PATH           = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_CC_PATH              = DEF(EBC_BIN)\iec.exe
*_VS2010_EBC_SLINK_PATH           = DEF(VS2010_BIN)\link.exe
*_VS2010_EBC_DLINK_PATH           = DEF(VS2010_BIN)\link.exe

*_VS2010_EBC_MAKE_FLAGS           = /nologo
*_VS2010_EBC_PP_FLAGS             = /nologo /E /TC /FIAutoGen.h
*_VS2010_EBC_CC_FLAGS             = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010_EBC_VFRPP_FLAGS          = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010_EBC_SLINK_FLAGS          = /lib /NOLOGO /MACHINE:EBC
*_VS2010_EBC_DLINK_FLAGS          = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Visual Studio 2010
#
#   VS2010xASL  - Microsoft Visual Studio 2010 Premium Edition with Microsoft ASL
#   ASL     - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
#   VS2010xASL           - Microsoft Visual Studio 2010 Premium Edition
*_VS2010xASL_*_*_FAMILY                 = MSFT

*_VS2010xASL_*_MAKE_PATH                = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_*_MAKE_FLAG                = /nologo
*_VS2010xASL_*_RC_PATH                  = DEF(VS2010_WINSDK_BIN)\rc.exe

*_VS2010xASL_*_SLINK_FLAGS              = /NOLOGO /LTCG
*_VS2010xASL_*_APP_FLAGS                = /nologo /E /TC
*_VS2010xASL_*_PP_FLAGS                 = /nologo /E /TC /FIAutoGen.h
*_VS2010xASL_*_VFRPP_FLAGS              = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010xASL_*_ASM16_PATH               = DEF(VS2010_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010xASL_*_ASL_PATH                 = DEF(WIN_ASL_BIN)
*_VS2010xASL_*_ASL_FLAGS                =
*_VS2010xASL_*_ASL_OUTFLAGS             = DEF(MS_ASL_OUTFLAGS)
*_VS2010xASL_*_ASLCC_FLAGS              = DEF(MSFT_ASLCC_FLAGS)
*_VS2010xASL_*_ASLPP_FLAGS              = DEF(MSFT_ASLPP_FLAGS)
*_VS2010xASL_*_ASLDLINK_FLAGS           = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010xASL_IA32_*_DLL                 = DEF(VS2010_DLL)

*_VS2010xASL_IA32_MAKE_PATH             = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_IA32_CC_PATH               = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_VFRPP_PATH            = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_SLINK_PATH            = DEF(VS2010_BIN)\lib.exe
*_VS2010xASL_IA32_DLINK_PATH            = DEF(VS2010_BIN)\link.exe
*_VS2010xASL_IA32_APP_PATH              = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_PP_PATH               = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASM_PATH              = DEF(VS2010_BIN)\ml.exe
*_VS2010xASL_IA32_ASLCC_PATH            = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASLPP_PATH            = DEF(VS2010_BIN)\cl.exe
*_VS2010xASL_IA32_ASLDLINK_PATH         = DEF(VS2010_BIN)\link.exe

      *_VS2010xASL_IA32_MAKE_FLAGS      = /nologo
  DEBUG_VS2010xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010xASL_IA32_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2010xASL_IA32_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010xASL_IA32_NASM_FLAGS      = -Ox -f win32 -g
RELEASE_VS2010xASL_IA32_NASM_FLAGS      = -Ox -f win32
  NOOPT_VS2010xASL_IA32_NASM_FLAGS      = -O0 -f win32 -g

  DEBUG_VS2010xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010xASL_IA32_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010xASL_X64_*_DLL                  = DEF(VS2010_DLL)

*_VS2010xASL_X64_CC_PATH                = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_PP_PATH                = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_APP_PATH               = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_VFRPP_PATH             = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASM_PATH               = DEF(VS2010_BINX64)\ml64.exe
*_VS2010xASL_X64_SLINK_PATH             = DEF(VS2010_BINX64)\lib.exe
*_VS2010xASL_X64_DLINK_PATH             = DEF(VS2010_BINX64)\link.exe
*_VS2010xASL_X64_ASLCC_PATH             = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASLPP_PATH             = DEF(VS2010_BINX64)\cl.exe
*_VS2010xASL_X64_ASLDLINK_PATH          = DEF(VS2010_BINX64)\link.exe

  DEBUG_VS2010xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010xASL_X64_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2010xASL_X64_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010xASL_X64_NASM_FLAGS       = -Ox -f win64 -g
RELEASE_VS2010xASL_X64_NASM_FLAGS       = -Ox -f win64
  NOOPT_VS2010xASL_X64_NASM_FLAGS       = -O0 -f win64 -g

  DEBUG_VS2010xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010xASL_X64_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010xASL_IPF_*_DLL                  = DEF(VS2010_DLL)

*_VS2010xASL_IPF_PP_PATH                = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_APP_PATH               = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_VFRPP_PATH             = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_CC_PATH                = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASM_PATH               = DEF(VS2010_BIN64)\ias.exe
*_VS2010xASL_IPF_SLINK_PATH             = DEF(VS2010_BIN64)\lib.exe
*_VS2010xASL_IPF_DLINK_PATH             = DEF(VS2010_BIN64)\link.exe
*_VS2010xASL_IPF_ASLCC_PATH             = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASLPP_PATH             = DEF(VS2010_BIN64)\cl.exe
*_VS2010xASL_IPF_ASLDLINK_PATH          = DEF(VS2010_BIN64)\link.exe

  DEBUG_VS2010xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_VS2010xASL_IPF_CC_FLAGS         = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_VS2010xASL_IPF_ASM_FLAGS        = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
  NOOPT_VS2010xASL_IPF_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010xASL_EBC_*_FAMILY               = INTEL
*_VS2010xASL_EBC_*_DLL                  = DEF(VS2010_DLL)

*_VS2010xASL_EBC_MAKE_PATH              = DEF(VS2010_BIN)\nmake.exe
*_VS2010xASL_EBC_PP_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_VFRPP_PATH             = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_CC_PATH                = DEF(EBC_BIN)\iec.exe
*_VS2010xASL_EBC_SLINK_PATH             = DEF(VS2010_BIN)\link.exe
*_VS2010xASL_EBC_DLINK_PATH             = DEF(VS2010_BIN)\link.exe

*_VS2010xASL_EBC_MAKE_FLAGS             = /nologo
*_VS2010xASL_EBC_PP_FLAGS               = /nologo /E /TC /FIAutoGen.h
*_VS2010xASL_EBC_CC_FLAGS               = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010xASL_EBC_VFRPP_FLAGS            = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010xASL_EBC_SLINK_FLAGS            = /lib /NOLOGO /MACHINE:EBC
*_VS2010xASL_EBC_DLINK_FLAGS            = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2010x86       - Microsoft Visual Studio 2010 (x86) with Intel ASL
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
####################################################################################
#   VS2010x86           - Microsoft Visual Studio 2010 (x86) ALL Edition with Intel ASL
*_VS2010x86_*_*_FAMILY                  = MSFT

*_VS2010x86_*_MAKE_PATH                 = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_*_MAKE_FLAG                 = /nologo
*_VS2010x86_*_RC_PATH                   = DEF(VS2010_WINSDKx86_BIN)\rc.exe

*_VS2010x86_*_MAKE_FLAGS                = /nologo
*_VS2010x86_*_SLINK_FLAGS               = /NOLOGO /LTCG
*_VS2010x86_*_APP_FLAGS                 = /nologo /E /TC
*_VS2010x86_*_PP_FLAGS                  = /nologo /E /TC /FIAutoGen.h
*_VS2010x86_*_VFRPP_FLAGS               = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010x86_*_ASM16_PATH                = DEF(VS2010x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010x86_*_ASL_PATH                  = DEF(WIN_IASL_BIN)
*_VS2010x86_*_ASL_FLAGS                 = DEF(DEFAULT_WIN_ASL_FLAGS)
*_VS2010x86_*_ASL_OUTFLAGS              = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_VS2010x86_*_ASLCC_FLAGS               = DEF(MSFT_ASLCC_FLAGS)
*_VS2010x86_*_ASLPP_FLAGS               = DEF(MSFT_ASLPP_FLAGS)
*_VS2010x86_*_ASLDLINK_FLAGS            = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010x86_IA32_*_DLL                  = DEF(VS2010x86_DLL)

*_VS2010x86_IA32_MAKE_PATH              = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_IA32_CC_PATH                = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_VFRPP_PATH             = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASLCC_PATH             = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASLPP_PATH             = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_SLINK_PATH             = DEF(VS2010x86_BIN)\lib.exe
*_VS2010x86_IA32_DLINK_PATH             = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_IA32_ASLDLINK_PATH          = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_IA32_APP_PATH               = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_PP_PATH                = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86_IA32_ASM_PATH               = DEF(VS2010x86_BIN)\ml.exe

      *_VS2010x86_IA32_MAKE_FLAGS       = /nologo
  DEBUG_VS2010x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010x86_IA32_CC_FLAGS         = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2010x86_IA32_ASM_FLAGS        = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010x86_IA32_NASM_FLAGS       = -Ox -f win32 -g
RELEASE_VS2010x86_IA32_NASM_FLAGS       = -Ox -f win32
  NOOPT_VS2010x86_IA32_NASM_FLAGS       = -O0 -f win32 -g

  DEBUG_VS2010x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010x86_IA32_DLINK_FLAGS      = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010x86_X64_*_DLL                   = DEF(VS2010x86_DLL)

*_VS2010x86_X64_CC_PATH                 = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_PP_PATH                 = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_APP_PATH                = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_VFRPP_PATH              = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASLCC_PATH              = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASLPP_PATH              = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86_X64_ASM_PATH                = DEF(VS2010x86_BINX64)\ml64.exe
*_VS2010x86_X64_SLINK_PATH              = DEF(VS2010x86_BINX64)\lib.exe
*_VS2010x86_X64_DLINK_PATH              = DEF(VS2010x86_BINX64)\link.exe
*_VS2010x86_X64_ASLDLINK_PATH           = DEF(VS2010x86_BINX64)\link.exe

  DEBUG_VS2010x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010x86_X64_CC_FLAGS          = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_VS2010x86_X64_ASM_FLAGS         = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010x86_X64_NASM_FLAGS        = -Ox -f win64 -g
RELEASE_VS2010x86_X64_NASM_FLAGS        = -Ox -f win64
  NOOPT_VS2010x86_X64_NASM_FLAGS        = -O0 -f win64 -g

  DEBUG_VS2010x86_X64_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86_X64_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010x86_X64_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010x86_IPF_*_DLL                   = DEF(VS2010x86_DLL)

*_VS2010x86_IPF_PP_PATH                 = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_APP_PATH                = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_VFRPP_PATH              = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASLCC_PATH              = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASLPP_PATH              = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_CC_PATH                 = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86_IPF_ASM_PATH                = DEF(VS2010x86_BIN64)\ias.exe
*_VS2010x86_IPF_SLINK_PATH              = DEF(VS2010x86_BIN64)\lib.exe
*_VS2010x86_IPF_DLINK_PATH              = DEF(VS2010x86_BIN64)\link.exe
*_VS2010x86_IPF_ASLDLINK_PATH           = DEF(VS2010x86_BIN64)\link.exe

  DEBUG_VS2010x86_IPF_CC_FLAGS          = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010x86_IPF_CC_FLAGS          = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_VS2010x86_IPF_CC_FLAGS          = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010x86_IPF_ASM_FLAGS         = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010x86_IPF_ASM_FLAGS         = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_VS2010x86_IPF_ASM_FLAGS         = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010x86_IPF_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010x86_IPF_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
  NOOPT_VS2010x86_IPF_DLINK_FLAGS       = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010x86_EBC_*_FAMILY                = INTEL
*_VS2010x86_EBC_*_DLL                   = DEF(VS2010x86_DLL)

*_VS2010x86_EBC_MAKE_PATH               = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86_EBC_PP_PATH                 = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_VFRPP_PATH              = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_CC_PATH                 = DEF(EBC_BINx86)\iec.exe
*_VS2010x86_EBC_SLINK_PATH              = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86_EBC_DLINK_PATH              = DEF(VS2010x86_BIN)\link.exe

*_VS2010x86_EBC_MAKE_FLAGS              = /nologo
*_VS2010x86_EBC_PP_FLAGS                = /nologo /E /TC /FIAutoGen.h
*_VS2010x86_EBC_CC_FLAGS                = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010x86_EBC_VFRPP_FLAGS             = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010x86_EBC_SLINK_FLAGS             = /lib /NOLOGO /MACHINE:EBC
*_VS2010x86_EBC_DLINK_FLAGS             = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#   VS2010x86xASL     - Microsoft Visual Studio 2010 with Microsoft ASL
#   ASL  - Microsoft ACPI Source Language Compiler (asl.exe)
####################################################################################
*_VS2010x86xASL_*_*_FAMILY              = MSFT

*_VS2010x86xASL_*_MAKE_PATH             = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_*_MAKE_FLAG             = /nologo
*_VS2010x86xASL_*_RC_PATH               = DEF(VS2010_WINSDKx86_BIN)\rc.exe

*_VS2010x86xASL_*_MAKE_FLAGS            = /nologo
*_VS2010x86xASL_*_SLINK_FLAGS           = /NOLOGO /LTCG
*_VS2010x86xASL_*_APP_FLAGS             = /nologo /E /TC
*_VS2010x86xASL_*_PP_FLAGS              = /nologo /E /TC /FIAutoGen.h
*_VS2010x86xASL_*_VFRPP_FLAGS           = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_VS2010x86xASL_*_ASM16_PATH            = DEF(VS2010x86_BIN)\ml.exe

##################
# ASL definitions
##################
*_VS2010x86xASL_*_ASL_PATH              = DEF(WIN_ASL_BIN)
*_VS2010x86xASL_*_ASL_FLAGS             = DEF(MS_ASL_FLAGS)
*_VS2010x86xASL_*_ASL_OUTFLAGS          = DEF(MS_ASL_OUTFLAGS)
*_VS2010x86xASL_*_ASLCC_FLAGS           = DEF(MSFT_ASLCC_FLAGS)
*_VS2010x86xASL_*_ASLPP_FLAGS           = DEF(MSFT_ASLPP_FLAGS)
*_VS2010x86xASL_*_ASLDLINK_FLAGS        = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_VS2010x86xASL_IA32_*_DLL              = DEF(VS2010x86_DLL)

*_VS2010x86xASL_IA32_MAKE_PATH          = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_IA32_CC_PATH            = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_VFRPP_PATH         = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASLCC_PATH         = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASLPP_PATH         = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_SLINK_PATH         = DEF(VS2010x86_BIN)\lib.exe
*_VS2010x86xASL_IA32_DLINK_PATH         = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_IA32_ASLDLINK_PATH      = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_IA32_APP_PATH           = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_PP_PATH            = DEF(VS2010x86_BIN)\cl.exe
*_VS2010x86xASL_IA32_ASM_PATH           = DEF(VS2010x86_BIN)\ml.exe

      *_VS2010x86xASL_IA32_MAKE_FLAGS   = /nologo
  DEBUG_VS2010x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm
RELEASE_VS2010x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_VS2010x86xASL_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Gy /Zi /Gm /Od

  DEBUG_VS2010x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd /Zi
RELEASE_VS2010x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd
  NOOPT_VS2010x86xASL_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /Cx /coff /Zd /Zi

  DEBUG_VS2010x86xASL_IA32_NASM_FLAGS   = -Ox -f win32 -g
RELEASE_VS2010x86xASL_IA32_NASM_FLAGS   = -Ox -f win32
  NOOPT_VS2010x86xASL_IA32_NASM_FLAGS   = -O0 -f win32 -g

  DEBUG_VS2010x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_VS2010x86xASL_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# X64 definitions
##################
*_VS2010x86xASL_X64_*_DLL               = DEF(VS2010x86_DLL)

*_VS2010x86xASL_X64_CC_PATH             = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_PP_PATH             = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_APP_PATH            = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_VFRPP_PATH          = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASLCC_PATH          = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASLPP_PATH          = DEF(VS2010x86_BINX64)\cl.exe
*_VS2010x86xASL_X64_ASM_PATH            = DEF(VS2010x86_BINX64)\ml64.exe
*_VS2010x86xASL_X64_SLINK_PATH          = DEF(VS2010x86_BINX64)\lib.exe
*_VS2010x86xASL_X64_DLINK_PATH          = DEF(VS2010x86_BINX64)\link.exe
*_VS2010x86xASL_X64_ASLDLINK_PATH       = DEF(VS2010x86_BINX64)\link.exe

  DEBUG_VS2010x86xASL_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_VS2010x86xASL_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_VS2010x86xASL_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_VS2010x86xASL_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_VS2010x86xASL_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd
NOOPT_VS2010x86xASL_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_VS2010x86xASL_X64_NASM_FLAGS    = -Ox -f win64 -g
RELEASE_VS2010x86xASL_X64_NASM_FLAGS    = -Ox -f win64
NOOPT_VS2010x86xASL_X64_NASM_FLAGS      = -O0 -f win64 -g

  DEBUG_VS2010x86xASL_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_VS2010x86xASL_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_VS2010x86xASL_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_VS2010x86xASL_IPF_*_DLL               = DEF(VS2010x86_DLL)

*_VS2010x86xASL_IPF_PP_PATH             = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_APP_PATH            = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_VFRPP_PATH          = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASLCC_PATH          = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASLPP_PATH          = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_CC_PATH             = DEF(VS2010x86_BIN64)\cl.exe
*_VS2010x86xASL_IPF_ASM_PATH            = DEF(VS2010x86_BIN64)\ias.exe
*_VS2010x86xASL_IPF_SLINK_PATH          = DEF(VS2010x86_BIN64)\lib.exe
*_VS2010x86xASL_IPF_DLINK_PATH          = DEF(VS2010x86_BIN64)\link.exe
*_VS2010x86xASL_IPF_ASLDLINK_PATH       = DEF(VS2010x86_BIN64)\link.exe

  DEBUG_VS2010x86xASL_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_VS2010x86xASL_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_VS2010x86xASL_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_VS2010x86xASL_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_VS2010x86xASL_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4
NOOPT_VS2010x86xASL_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_VS2010x86xASL_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_VS2010x86xASL_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_VS2010x86xASL_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEBUG_DIR)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_VS2010x86xASL_EBC_*_FAMILY            = INTEL
*_VS2010x86xASL_EBC_*_DLL               = DEF(VS2010x86_DLL)

*_VS2010x86xASL_EBC_MAKE_PATH           = DEF(VS2010x86_BIN)\nmake.exe
*_VS2010x86xASL_EBC_PP_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_VFRPP_PATH          = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_CC_PATH             = DEF(EBC_BINx86)\iec.exe
*_VS2010x86xASL_EBC_SLINK_PATH          = DEF(VS2010x86_BIN)\link.exe
*_VS2010x86xASL_EBC_DLINK_PATH          = DEF(VS2010x86_BIN)\link.exe

*_VS2010x86xASL_EBC_MAKE_FLAGS          = /nologo
*_VS2010x86xASL_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_VS2010x86xASL_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_VS2010x86xASL_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_VS2010x86xASL_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_VS2010x86xASL_EBC_DLINK_FLAGS         = "C:\Program Files (x86)\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Intel ACPI Compiler
#
####################################################################################
#   DDK3790  - Microsoft Windows DDK 3790.1830
#   ASL  - Intel ACPI Source Language Compiler (iasl.exe)
*_DDK3790_*_*_FAMILY              = MSFT

*_DDK3790_*_*_DLL                 = DEF(WINDDK_BIN32)
*_DDK3790_*_MAKE_PATH             = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790_*_MAKE_FLAGS            = /nologo
*_DDK3790_*_RC_PATH               = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790_*_PP_FLAGS              = /nologo /E /TC /FIAutoGen.h
*_DDK3790_*_APP_FLAGS             = /nologo /E /TC
*_DDK3790_*_SLINK_FLAGS           = /nologo /LTCG
*_DDK3790_*_VFRPP_FLAGS           = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_DDK3790_*_ASM16_PATH            = DEF(WINDDK_BIN32)\ml.exe

##################
# ASL definitions
##################
*_DDK3790_*_ASL_PATH              = DEF(DEFAULT_WIN_ASL_BIN)
*_DDK3790_*_ASL_FLAGS             = DEF(DEFAULT_WIN_ASL_FLAGS)
*_DDK3790_*_ASL_OUTFLAGS          = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_DDK3790_*_ASLCC_FLAGS           = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790_*_ASLPP_FLAGS           = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790_*_ASLDLINK_FLAGS        = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790_IA32_CC_PATH            = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_SLINK_PATH         = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790_IA32_DLINK_PATH         = DEF(WINDDK_BIN32)\link.exe
*_DDK3790_IA32_PP_PATH            = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_VFRPP_PATH         = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_APP_PATH           = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASM_PATH           = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790_IA32_ASLCC_PATH         = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLPP_PATH         = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790_IA32_ASLDLINK_PATH      = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790_IA32_CC_FLAGS     = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790_IA32_CC_FLAGS     = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790_IA32_CC_FLAGS       = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_DDK3790_IA32_ASM_FLAGS      = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_DDK3790_IA32_NASM_FLAGS   = -Ox -f win32 -g
RELEASE_DDK3790_IA32_NASM_FLAGS   = -Ox -f win32
NOOPT_DDK3790_IA32_NASM_FLAGS     = -O0 -f win32 -g

  DEBUG_DDK3790_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790_IA32_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# x64 definitions
##################
*_DDK3790_X64_CC_PATH             = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_SLINK_PATH          = DEF(WINDDK_BINX64)\lib.exe
*_DDK3790_X64_DLINK_PATH          = DEF(WINDDK_BINX64)\link.exe
*_DDK3790_X64_PP_PATH             = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_VFRPP_PATH          = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_APP_PATH            = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASM_PATH            = DEF(WINDDK_BINX64)\ml64.exe
*_DDK3790_X64_ASLCC_PATH          = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASLPP_PATH          = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790_X64_ASLDLINK_PATH       = DEF(WINDDK_BINX64)\link.exe

  DEBUG_DDK3790_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_DDK3790_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_DDK3790_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd
NOOPT_DDK3790_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_DDK3790_X64_NASM_FLAGS    = -Ox -f win64 -g
RELEASE_DDK3790_X64_NASM_FLAGS    = -Ox -f win64
NOOPT_DDK3790_X64_NASM_FLAGS      = -O0 -f win64 -g

  DEBUG_DDK3790_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_DDK3790_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_DDK3790_IPF_CC_PATH             = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_SLINK_PATH          = DEF(WINDDK_BIN64)\lib.exe
*_DDK3790_IPF_DLINK_PATH          = DEF(WINDDK_BIN64)\link.exe
*_DDK3790_IPF_PP_PATH             = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_VFRPP_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_APP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASM_PATH            = DEF(WINDDK_BIN64)\ias.exe
*_DDK3790_IPF_ASLCC_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASLPP_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790_IPF_ASLDLINK_PATH       = DEF(WINDDK_BIN64)\link.exe


  DEBUG_DDK3790_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_DDK3790_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
NOOPT_DDK3790_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_DDK3790_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_DDK3790_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4
NOOPT_DDK3790_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_DDK3790_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_DDK3790_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
NOOPT_DDK3790_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_DDK3790_EBC_*_FAMILY            = INTEL

*_DDK3790_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_DDK3790_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_DDK3790_EBC_DLINK_PATH          = DEF(EBC_BIN)\link.exe
*_DDK3790_EBC_SLINK_PATH          = DEF(EBC_BIN)\link.exe
*_DDK3790_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe

*_DDK3790_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_DDK3790_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_DDK3790_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER

####################################################################################
#
# Microsoft Device Driver Kit 3790.1830 (IA-32, X64, Itanium, with Link Time Code Generation)
# And Microsoft ACPI Compiler
#
####################################################################################
#   DDK3790xASL  - Microsoft Windows DDK 3790.1830
#   ASL          - Microsoft ACPI Source Language Compiler (asl.exe)
*_DDK3790xASL_*_*_FAMILY                = MSFT

*_DDK3790xASL_*_*_DLL                   = DEF(WINDDK_BIN32)
*_DDK3790xASL_*_MAKE_PATH               = DEF(WINDDK_BIN32)\nmake.exe
*_DDK3790xASL_*_MAKE_FLAGS              = /nologo
*_DDK3790xASL_*_RC_PATH                 = DEF(WINDDK_BIN32)\rc.exe

*_DDK3790xASL_*_PP_FLAGS                = /nologo /E /TC /FIAutoGen.h
*_DDK3790xASL_*_APP_FLAGS               = /nologo /E /TC
*_DDK3790xASL_*_SLINK_FLAGS             = /nologo /LTCG
*_DDK3790xASL_*_VFRPP_FLAGS             = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h

*_DDK3790xASL_*_ASM16_PATH              = DEF(WINDDK_BIN32)\ml.exe

##################
# ASL definitions
##################
*_DDK3790xASL_*_ASL_PATH                = DEF(WIN_ASL_BIN)
*_DDK3790xASL_*_ASL_FLAGS               =
*_DDK3790xASL_*_ASL_OUTFLAGS            = DEF(MS_ASL_OUTFLAGS)
*_DDK3790xASL_*_ASLCC_FLAGS             = DEF(MSFT_ASLCC_FLAGS)
*_DDK3790xASL_*_ASLPP_FLAGS             = DEF(MSFT_ASLPP_FLAGS)
*_DDK3790xASL_*_ASLDLINK_FLAGS          = DEF(MSFT_ASLDLINK_FLAGS)

##################
# IA32 definitions
##################
*_DDK3790xASL_IA32_CC_PATH              = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_SLINK_PATH           = DEF(WINDDK_BIN32)\lib.exe
*_DDK3790xASL_IA32_DLINK_PATH           = DEF(WINDDK_BIN32)\link.exe
*_DDK3790xASL_IA32_PP_PATH              = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_VFRPP_PATH           = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_APP_PATH             = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASM_PATH             = DEF(WINDDK_BIN32)\ml.exe
*_DDK3790xASL_IA32_ASLCC_PATH           = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLPP_PATH           = DEF(WINDDK_BIN32)\cl.exe
*_DDK3790xASL_IA32_ASLDLINK_PATH        = DEF(WINDDK_BIN32)\link.exe

  DEBUG_DDK3790xASL_IA32_CC_FLAGS       = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790xASL_IA32_CC_FLAGS       = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_DDK3790xASL_IA32_CC_FLAGS       = /nologo /c /WX /W4 /Gy /Gs32768 /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790xASL_IA32_ASM_FLAGS      = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_DDK3790xASL_IA32_ASM_FLAGS      = /nologo /c /WX /W3 /coff /Cx /Zd
  NOOPT_DDK3790xASL_IA32_ASM_FLAGS      = /nologo /c /WX /W3 /coff /Cx /Zd /Zi

  DEBUG_DDK3790xASL_IA32_NASM_FLAGS     = -Ox -f win32 -g
RELEASE_DDK3790xASL_IA32_NASM_FLAGS     = -Ox -f win32
  NOOPT_DDK3790xASL_IA32_NASM_FLAGS     = -O0 -f win32 -g

  DEBUG_DDK3790xASL_IA32_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790xASL_IA32_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_DDK3790xASL_IA32_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# x64 definitions
##################
*_DDK3790xASL_X64_CC_PATH               = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_SLINK_PATH            = DEF(WINDDK_BINX64)\lib.exe
*_DDK3790xASL_X64_DLINK_PATH            = DEF(WINDDK_BINX64)\link.exe
*_DDK3790xASL_X64_PP_PATH               = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_VFRPP_PATH            = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_APP_PATH              = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASM_PATH              = DEF(WINDDK_BINX64)\ml64.exe
*_DDK3790xASL_X64_ASLCC_PATH            = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASLPP_PATH            = DEF(WINDDK_BINX64)\cl.exe
*_DDK3790xASL_X64_ASLDLINK_PATH         = DEF(WINDDK_BINX64)\link.exe

  DEBUG_DDK3790xASL_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_DDK3790xASL_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /O1ib2s /GL /Gy /FIAutoGen.h /EHs-c- /GR- /GF
  NOOPT_DDK3790xASL_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /D UNICODE /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od

  DEBUG_DDK3790xASL_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_DDK3790xASL_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd
  NOOPT_DDK3790xASL_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd /Zi

  DEBUG_DDK3790xASL_X64_NASM_FLAGS      = -Ox -f win64 -g
RELEASE_DDK3790xASL_X64_NASM_FLAGS      = -Ox -f win64
  NOOPT_DDK3790xASL_X64_NASM_FLAGS      = -O0 -f win64 -g

  DEBUG_DDK3790xASL_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_DDK3790xASL_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4078 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
  NOOPT_DDK3790xASL_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:AMD64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_DDK3790xASL_IPF_CC_PATH               = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_SLINK_PATH            = DEF(WINDDK_BIN64)\lib.exe
*_DDK3790xASL_IPF_DLINK_PATH            = DEF(WINDDK_BIN64)\link.exe
*_DDK3790xASL_IPF_PP_PATH               = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_VFRPP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_APP_PATH              = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASM_PATH              = DEF(WINDDK_BIN64)\ias.exe
*_DDK3790xASL_IPF_ASLCC_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASLPP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_DDK3790xASL_IPF_ASLDLINK_PATH         = DEF(WINDDK_BIN64)\link.exe


  DEBUG_DDK3790xASL_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32 /Zi
RELEASE_DDK3790xASL_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /Os /GL /FIAutoGen.h /QIPF_fr32
  NOOPT_DDK3790xASL_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /EHs-c- /GR- /Gy /FIAutoGen.h /QIPF_fr32 /Zi /Od

  DEBUG_DDK3790xASL_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_DDK3790xASL_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4
  NOOPT_DDK3790xASL_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4 -d debug

  DEBUG_DDK3790xASL_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG
RELEASE_DDK3790xASL_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb
  NOOPT_DDK3790xASL_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF,ICF /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEST_DIR_DEBUG)/$(BASE_NAME).pdb /DEBUG

##################
# EBC definitions
##################
*_DDK3790xASL_EBC_*_FAMILY              = INTEL

*_DDK3790xASL_EBC_PP_PATH               = DEF(EBC_BIN)\iec.exe
*_DDK3790xASL_EBC_CC_PATH               = DEF(EBC_BIN)\iec.exe
*_DDK3790xASL_EBC_DLINK_PATH            = DEF(EBC_BIN)\link.exe
*_DDK3790xASL_EBC_SLINK_PATH            = DEF(EBC_BIN)\link.exe
*_DDK3790xASL_EBC_VFRPP_PATH            = DEF(EBC_BIN)\iec.exe

*_DDK3790xASL_EBC_CC_FLAGS              = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_DDK3790xASL_EBC_SLINK_FLAGS           = /lib /NOLOGO /MACHINE:EBC
*_DDK3790xASL_EBC_DLINK_FLAGS           = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /ALIGN:32 /DRIVER


####################################################################################
# GCC Common
####################################################################################

*_*_*_OBJCOPY_PATH                      = echo
*_*_*_OBJCOPY_FLAGS                     = objcopy not needed for
*_*_*_SYMRENAME_PATH                    = echo
*_*_*_SYMRENAME_FLAGS                   = Symbol renaming not needed for
DEBUG_*_*_OBJCOPY_ADDDEBUGFLAG          = --add-gnu-debuglink=$(DEBUG_DIR)/$(MODULE_NAME).debug
RELEASE_*_*_OBJCOPY_ADDDEBUGFLAG        =

DEFINE GCC_ALL_CC_FLAGS                 = -g -Os -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -c -include AutoGen.h
DEFINE GCC_IA32_CC_FLAGS                = DEF(GCC_ALL_CC_FLAGS) -m32 -malign-double -freorder-blocks -freorder-blocks-and-partition -O2 -mno-stack-arg-probe
DEFINE GCC_X64_CC_FLAGS                 = DEF(GCC_ALL_CC_FLAGS) -mno-red-zone -Wno-address -mno-stack-arg-probe
DEFINE GCC_IPF_CC_FLAGS                 = DEF(GCC_ALL_CC_FLAGS) -minline-int-divide-min-latency
DEFINE GCC_ARM_CC_FLAGS                 = DEF(GCC_ALL_CC_FLAGS) -mword-relocations -mlittle-endian -mabi=aapcs -mapcs -fno-short-enums -save-temps -fsigned-char -ffunction-sections -fdata-sections -fomit-frame-pointer -Wno-address -mthumb -mfloat-abi=soft
DEFINE GCC_AARCH64_CC_FLAGS             = DEF(GCC_ALL_CC_FLAGS) -mcmodel=tiny -mlittle-endian -fno-short-enums -save-temps -fverbose-asm -fsigned-char  -ffunction-sections -fdata-sections -fomit-frame-pointer -fno-builtin -Wno-address -fno-asynchronous-unwind-tables
DEFINE GCC_DLINK_FLAGS_COMMON           = -nostdlib --pie
DEFINE GCC_DLINK2_FLAGS_COMMON          = --script=$(EDK_TOOLS_PATH)/Scripts/GccBase.lds
DEFINE GCC_IA32_X64_DLINK_COMMON        = DEF(GCC_DLINK_FLAGS_COMMON) --gc-sections
DEFINE GCC_ARM_AARCH64_DLINK_COMMON     = --emit-relocs -nostdlib --gc-sections -u $(IMAGE_ENTRY_POINT) -e $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_ARM_DLINK_FLAGS              = DEF(GCC_ARM_AARCH64_DLINK_COMMON) -Ttext=0x0
DEFINE GCC_AARCH64_DLINK_FLAGS          = DEF(GCC_ARM_AARCH64_DLINK_COMMON) -z common-page-size=0x20
DEFINE GCC_IA32_X64_ASLDLINK_FLAGS      = DEF(GCC_IA32_X64_DLINK_COMMON) --entry _ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_ARM_ASLDLINK_FLAGS           = DEF(GCC_ARM_DLINK_FLAGS) --entry ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_AARCH64_ASLDLINK_FLAGS       = DEF(GCC_AARCH64_DLINK_FLAGS) --entry ReferenceAcpiTable -u $(IMAGE_ENTRY_POINT)
DEFINE GCC_IA32_X64_DLINK_FLAGS         = DEF(GCC_IA32_X64_DLINK_COMMON) --entry _$(IMAGE_ENTRY_POINT) --file-alignment 0x20 --section-alignment 0x20 -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_IPF_DLINK_FLAGS              = -nostdlib -O2 --gc-sections --dll -static --entry $(IMAGE_ENTRY_POINT) --undefined $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC_IPF_OBJCOPY_FLAGS            = -I elf64-ia64-little -O efi-bsdrv-ia64
DEFINE GCC_IPF_SYMRENAME_FLAGS          = --redefine-sym memcpy=CopyMem
DEFINE GCC_ASM_FLAGS                    = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_PP_FLAGS                     = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
DEFINE GCC_VFRPP_FLAGS                  = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
DEFINE GCC_ASLPP_FLAGS                  = -x c -E -P
DEFINE GCC_ASLCC_FLAGS                  = -x c
DEFINE GCC_WINDRES_FLAGS                = -J rc -O coff
DEFINE GCC_IA32_RC_FLAGS                = -I binary -O elf32-i386          -B i386    --rename-section .data=.hii
DEFINE GCC_X64_RC_FLAGS                 = -I binary -O elf64-x86-64        -B i386    --rename-section .data=.hii
DEFINE GCC_IPF_RC_FLAGS                 = -I binary -O elf64-ia64-little   -B ia64    --rename-section .data=.hii
DEFINE GCC_ARM_RC_FLAGS                 = -I binary -O elf32-littlearm     -B arm     --rename-section .data=.hii
DEFINE GCC_AARCH64_RC_FLAGS             = -I binary -O elf64-littleaarch64 -B aarch64 --rename-section .data=.hii

DEFINE GCC54_IA32_PREFIX                = ENV(GCC54_BIN)
DEFINE GCC54_X64_PREFIX                 = ENV(GCC54_BIN)
DEFINE GCC54_ALL_CC_FLAGS               = -g -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-array-bounds -ffunction-sections -fdata-sections -c -include AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
DEFINE GCC54_IA32_CC_FLAGS              = DEF(GCC54_ALL_CC_FLAGS) -m32 -malign-double -fno-stack-protector -D EFI32 -fno-asynchronous-unwind-tables -Wno-address -Wno-unused-but-set-variable
DEFINE GCC54_X64_CC_FLAGS               = DEF(GCC54_ALL_CC_FLAGS) -m64 -fno-stack-protector "-DEFIAPI=__attribute__((ms_abi))" -DNO_BUILTIN_VA_FUNCS -mno-red-zone -Wno-address -mcmodel=large -fno-asynchronous-unwind-tables -Wno-address -Wno-unused-but-set-variable
DEFINE GCC54_IA32_X64_DLINK_COMMON      = -nostdlib -n -q --gc-sections -z common-page-size=0x40
DEFINE GCC54_IA32_X64_ASLDLINK_FLAGS    = DEF(GCC54_IA32_X64_DLINK_COMMON) --entry ReferenceAcpiTable -u ReferenceAcpiTable
DEFINE GCC54_IA32_X64_DLINK_FLAGS       = DEF(GCC54_IA32_X64_DLINK_COMMON) --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
DEFINE GCC54_IA32_DLINK2_FLAGS          = DEF(GCC_DLINK2_FLAGS_COMMON) --defsym=PECOFF_HEADER_SIZE=0x220
DEFINE GCC54_X64_DLINK_FLAGS            = DEF(GCC54_IA32_X64_DLINK_FLAGS)  -melf_x86_64 --oformat=elf64-x86-64
DEFINE GCC54_X64_DLINK2_FLAGS           = DEF(GCC_DLINK2_FLAGS_COMMON) --defsym=PECOFF_HEADER_SIZE=0x228
DEFINE GCC54_ASM_FLAGS                  = DEF(GCC_ASM_FLAGS)
DEFINE GCC54_ARM_ASM_FLAGS              = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_ASM_FLAGS) -mlittle-endian
DEFINE GCC54_ARM_CC_FLAGS               = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC54_ALL_CC_FLAGS) DEF(GCC_ARM_CC_FLAGS) -fstack-protector -mno-unaligned-access
DEFINE GCC54_ARM_DLINK_FLAGS            = DEF(GCC_ARM_DLINK_FLAGS) --oformat=elf32-littlearm
DEFINE GCC54_ARM_ASLDLINK_FLAGS         = DEF(GCC_ARM_ASLDLINK_FLAGS) --oformat=elf32-littlearm
DEFINE GCC54_AARCH64_ASM_FLAGS          = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_ASM_FLAGS) -mlittle-endian
DEFINE GCC54_AARCH64_CC_FLAGS           = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC54_ALL_CC_FLAGS) DEF(GCC_AARCH64_CC_FLAGS)
DEFINE GCC54_AARCH64_DLINK_FLAGS        = DEF(GCC_AARCH64_DLINK_FLAGS)
DEFINE GCC54_AARCH64_DLINK2_FLAGS       = DEF(GCC_DLINK2_FLAGS_COMMON) --defsym=PECOFF_HEADER_SIZE=0x228
DEFINE GCC54_AARCH64_ASLDLINK_FLAGS     = DEF(GCC_AARCH64_ASLDLINK_FLAGS)


####################################################################################
#
# Unix GCC And Intel Linux ACPI Compiler
#
####################################################################################
#   UNIXGCC         - UNIX GCC
#   ASL             - Intel Linux ACPI Source Language Compiler (iasl)
*_UNIXGCC_*_*_FAMILY              = GCC

*_UNIXGCC_*_MAKE_PATH             = make
*_UNIXGCC_*_ASL_PATH              = DEF(UNIX_IASL_BIN)

*_UNIXGCC_IA32_DLINK_FLAGS        = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_UNIXGCC_X64_DLINK_FLAGS         = DEF(GCC_IA32_X64_DLINK_FLAGS) --image-base=0
*_UNIXGCC_IA32_ASLDLINK_FLAGS     = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_UNIXGCC_X64_ASLDLINK_FLAGS      = DEF(GCC_IA32_X64_ASLDLINK_FLAGS)
*_UNIXGCC_*_ASM_FLAGS             = DEF(GCC_ASM_FLAGS)
*_UNIXGCC_*_PP_FLAGS              = DEF(GCC_PP_FLAGS)
*_UNIXGCC_*_ASLPP_FLAGS           = DEF(GCC_ASLPP_FLAGS)
*_UNIXGCC_*_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS)
*_UNIXGCC_*_VFRPP_FLAGS           = DEF(GCC_VFRPP_FLAGS)
*_UNIXGCC_*_APP_FLAGS             =
*_UNIXGCC_*_ASL_FLAGS             = DEF(IASL_FLAGS)
*_UNIXGCC_*_ASL_OUTFLAGS          = DEF(IASL_OUTFLAGS)

##################
# IA32 definitions
##################
*_UNIXGCC_IA32_OBJCOPY_PATH       = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IA32_PP_PATH            = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_CC_PATH            = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_SLINK_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ar
*_UNIXGCC_IA32_DLINK_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASLPP_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLCC_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_ASLDLINK_PATH      = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)ld
*_UNIXGCC_IA32_ASM_PATH           = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_VFRPP_PATH         = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)gcc
*_UNIXGCC_IA32_RC_PATH            = DEF(UNIXGCC_IA32_PETOOLS_PREFIX)objcopy

*_UNIXGCC_IA32_CC_FLAGS           = DEF(GCC_IA32_CC_FLAGS)
*_UNIXGCC_IA32_RC_FLAGS           = DEF(GCC_IA32_RC_FLAGS)
*_UNIXGCC_IA32_OBJCOPY_FLAGS      =
*_UNIXGCC_IA32_NASM_FLAGS         = -f win32

##################
# X64 definitions
##################
*_UNIXGCC_X64_CC_PATH             = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_ASLCC_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_SLINK_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ar
*_UNIXGCC_X64_DLINK_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ld
*_UNIXGCC_X64_ASLDLINK_PATH       = DEF(UNIXGCC_X64_PETOOLS_PREFIX)ld
*_UNIXGCC_X64_ASM_PATH            = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_PP_PATH             = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_ASLPP_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_VFRPP_PATH          = DEF(UNIXGCC_X64_PETOOLS_PREFIX)gcc
*_UNIXGCC_X64_RC_PATH             = DEF(UNIXGCC_X64_PETOOLS_PREFIX)objcopy
*_UNIXGCC_X64_OBJCOPY_PATH        = DEF(UNIXGCC_X64_PETOOLS_PREFIX)objcopy

*_UNIXGCC_X64_CC_FLAGS            = DEF(GCC_X64_CC_FLAGS)
*_UNIXGCC_X64_RC_FLAGS            = DEF(GCC_X64_RC_FLAGS)
*_UNIXGCC_X64_OBJCOPY_FLAGS       =
*_UNIXGCC_X64_NASM_FLAGS          = -f win64

##################
# IPF definitions
##################
*_UNIXGCC_IPF_CC_PATH             = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_ASLCC_PATH          = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_SLINK_PATH          = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ar
*_UNIXGCC_IPF_DLINK_PATH          = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ld
*_UNIXGCC_IPF_ASLDLINK_PATH       = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)ld
*_UNIXGCC_IPF_ASM_PATH            = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_PP_PATH             = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_ASLPP_PATH          = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_VFRPP_PATH          = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)gcc
*_UNIXGCC_IPF_OBJCOPY_PATH        = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IPF_SYMRENAME_PATH      = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy
*_UNIXGCC_IPF_RC_PATH             = DEF(UNIXGCC_IPF_PETOOLS_PREFIX)objcopy

*_UNIXGCC_IPF_CC_FLAGS            = DEF(GCC_IPF_CC_FLAGS)
*_UNIXGCC_IPF_DLINK_FLAGS         = DEF(GCC_IPF_DLINK_FLAGS)
*_UNIXGCC_IPF_OBJCOPY_FLAGS       = DEF(GCC_IPF_OBJCOPY_FLAGS)
*_UNIXGCC_IPF_SYMRENAME_FLAGS     = DEF(GCC_IPF_SYMRENAME_FLAGS)
*_UNIXGCC_IPF_RC_FLAGS            = DEF(GCC_IPF_RC_FLAGS)


####################################################################################
#
# GCC 5.4 - This configuration is used to compile under Linux to produce
#           PE/COFF binaries using GCC 5.4.
#
####################################################################################
*_GCC54_*_*_FAMILY                = GCC

*_GCC54_*_MAKE_PATH               = DEF(GCC54_IA32_PREFIX)make
*_GCC54_*_*_DLL                   = ENV(GCC54_DLL)
*_GCC54_*_ASL_PATH                = DEF(UNIX_IASL_BIN)

*_GCC54_*_PP_FLAGS                = DEF(GCC_PP_FLAGS)
*_GCC54_*_ASLPP_FLAGS             = DEF(GCC_ASLPP_FLAGS)
*_GCC54_*_ASLCC_FLAGS             = DEF(GCC_ASLCC_FLAGS)
*_GCC54_*_VFRPP_FLAGS             = DEF(GCC_VFRPP_FLAGS)
*_GCC54_*_APP_FLAGS               =
*_GCC54_*_ASL_FLAGS               = DEF(IASL_FLAGS)
*_GCC54_*_ASL_OUTFLAGS            = DEF(IASL_OUTFLAGS)

##################
# GCC54 IA32 definitions
##################
*_GCC54_IA32_OBJCOPY_PATH         = DEF(GCC54_IA32_PREFIX)objcopy
*_GCC54_IA32_CC_PATH              = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_SLINK_PATH           = DEF(GCC54_IA32_PREFIX)ar
*_GCC54_IA32_DLINK_PATH           = DEF(GCC54_IA32_PREFIX)ld
*_GCC54_IA32_ASLDLINK_PATH        = DEF(GCC54_IA32_PREFIX)ld
*_GCC54_IA32_ASM_PATH             = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_PP_PATH              = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_VFRPP_PATH           = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_ASLCC_PATH           = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_ASLPP_PATH           = DEF(GCC54_IA32_PREFIX)gcc
*_GCC54_IA32_RC_PATH              = DEF(GCC54_IA32_PREFIX)objcopy

*_GCC54_IA32_ASLCC_FLAGS          = DEF(GCC_ASLCC_FLAGS) -m32
*_GCC54_IA32_ASLDLINK_FLAGS       = DEF(GCC54_IA32_X64_ASLDLINK_FLAGS) -m elf_i386
*_GCC54_IA32_ASM_FLAGS            = DEF(GCC54_ASM_FLAGS) -m32 -march=i386
*_GCC54_IA32_CC_FLAGS             = DEF(GCC54_IA32_CC_FLAGS) -Os
*_GCC54_IA32_DLINK_FLAGS          = DEF(GCC54_IA32_X64_DLINK_FLAGS) -m elf_i386 --oformat=elf32-i386
*_GCC54_IA32_DLINK2_FLAGS         = DEF(GCC54_IA32_DLINK2_FLAGS)
*_GCC54_IA32_RC_FLAGS             = DEF(GCC_IA32_RC_FLAGS)
*_GCC54_IA32_OBJCOPY_FLAGS        = 
*_GCC54_IA32_NASM_FLAGS           = -f elf32

##################
# GCC54 X64 definitions
##################
*_GCC54_X64_OBJCOPY_PATH          = DEF(GCC54_X64_PREFIX)objcopy
*_GCC54_X64_CC_PATH               = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_SLINK_PATH            = DEF(GCC54_X64_PREFIX)ar
*_GCC54_X64_DLINK_PATH            = DEF(GCC54_X64_PREFIX)ld
*_GCC54_X64_ASLDLINK_PATH         = DEF(GCC54_X64_PREFIX)ld
*_GCC54_X64_ASM_PATH              = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_PP_PATH               = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_VFRPP_PATH            = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_ASLCC_PATH            = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_ASLPP_PATH            = DEF(GCC54_X64_PREFIX)gcc
*_GCC54_X64_RC_PATH               = DEF(GCC54_X64_PREFIX)objcopy

*_GCC54_X64_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS) -m64
*_GCC54_X64_ASLDLINK_FLAGS        = DEF(GCC54_IA32_X64_ASLDLINK_FLAGS) -m elf_x86_64
*_GCC54_X64_ASM_FLAGS             = DEF(GCC54_ASM_FLAGS) -m64
*_GCC54_X64_CC_FLAGS              = DEF(GCC54_X64_CC_FLAGS)
*_GCC54_X64_DLINK_FLAGS           = DEF(GCC54_X64_DLINK_FLAGS)
*_GCC54_X64_DLINK2_FLAGS          = DEF(GCC54_X64_DLINK2_FLAGS)
*_GCC54_X64_RC_FLAGS              = DEF(GCC_X64_RC_FLAGS)
*_GCC54_X64_OBJCOPY_FLAGS         = 
*_GCC54_X64_NASM_FLAGS            = -f elf64

##################
# GCC54 ARM definitions
##################
*_GCC54_ARM_CC_PATH               = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_SLINK_PATH            = ENV(GCC54_ARM_PREFIX)ar
*_GCC54_ARM_DLINK_PATH            = ENV(GCC54_ARM_PREFIX)ld
*_GCC54_ARM_ASLDLINK_PATH         = ENV(GCC54_ARM_PREFIX)ld
*_GCC54_ARM_ASM_PATH              = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_PP_PATH               = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_VFRPP_PATH            = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_ASLCC_PATH            = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_ASLPP_PATH            = ENV(GCC54_ARM_PREFIX)gcc
*_GCC54_ARM_RC_PATH               = ENV(GCC54_ARM_PREFIX)objcopy

*_GCC54_ARM_ARCHCC_FLAGS          = -mthumb
*_GCC54_ARM_PLATFORM_FLAGS        = -march=armv7-a

*_GCC54_ARM_ASLCC_FLAGS           = DEF(GCC_ASLCC_FLAGS)
*_GCC54_ARM_ASLDLINK_FLAGS        = DEF(GCC54_ARM_ASLDLINK_FLAGS)
*_GCC54_ARM_ASM_FLAGS             = DEF(GCC54_ARM_ASM_FLAGS)
*_GCC54_ARM_DLINK_FLAGS           = DEF(GCC54_ARM_DLINK_FLAGS)
*_GCC54_ARM_PLATFORM_FLAGS        = -march=armv7-a
*_GCC54_ARM_PP_FLAGS              = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC54_ARM_RC_FLAGS              = DEF(GCC_ARM_RC_FLAGS)
*_GCC54_ARM_VFRPP_FLAGS           = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)

  DEBUG_GCC54_ARM_CC_FLAGS        = DEF(GCC54_ARM_CC_FLAGS) -O0
RELEASE_GCC54_ARM_CC_FLAGS        = DEF(GCC54_ARM_CC_FLAGS) -Wno-unused-but-set-variable

##################
# GCC54 AARCH64 definitions
##################
*_GCC54_AARCH64_CC_PATH           = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_SLINK_PATH        = ENV(GCC54_AARCH64_PREFIX)ar
*_GCC54_AARCH64_DLINK_PATH        = ENV(GCC54_AARCH64_PREFIX)ld
*_GCC54_AARCH64_ASLDLINK_PATH     = ENV(GCC54_AARCH64_PREFIX)ld
*_GCC54_AARCH64_ASM_PATH          = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_PP_PATH           = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_VFRPP_PATH        = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_ASLCC_PATH        = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_ASLPP_PATH        = ENV(GCC54_AARCH64_PREFIX)gcc
*_GCC54_AARCH64_RC_PATH           = ENV(GCC54_AARCH64_PREFIX)objcopy

*_GCC54_AARCH64_ASLCC_FLAGS       = DEF(GCC_ASLCC_FLAGS)
*_GCC54_AARCH64_ASLDLINK_FLAGS    = DEF(GCC54_AARCH64_ASLDLINK_FLAGS)
*_GCC54_AARCH64_ASM_FLAGS         = DEF(GCC54_AARCH64_ASM_FLAGS)
*_GCC54_AARCH64_DLINK_FLAGS       = DEF(GCC54_AARCH64_DLINK_FLAGS)
*_GCC54_AARCH64_DLINK2_FLAGS      = DEF(GCC54_AARCH64_DLINK2_FLAGS)
*_GCC54_AARCH64_PLATFORM_FLAGS    =
*_GCC54_AARCH64_PP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_PP_FLAGS)
*_GCC54_AARCH64_RC_FLAGS          = DEF(GCC_AARCH64_RC_FLAGS)
*_GCC54_AARCH64_VFRPP_FLAGS       = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(GCC_VFRPP_FLAGS)

  DEBUG_GCC54_AARCH64_CC_FLAGS    = DEF(GCC54_AARCH64_CC_FLAGS) -O0
RELEASE_GCC54_AARCH64_CC_FLAGS    = DEF(GCC54_AARCH64_CC_FLAGS) -Wno-unused-but-set-variable


####################################################################################
#
# Elf GCC - This configuration is used to compile on Linux boxes to produce elf binaries.
#
####################################################################################
#   ELFGCC           - Linux ELF GCC
*_ELFGCC_*_*_FAMILY               = GCC
*_ELFGCC_*_MAKE_PATH              = make

*_ELFGCC_*_PP_FLAGS               = -E -x assembler-with-cpp -include AutoGen.h
*_ELFGCC_*_VFRPP_FLAGS            = -x c -E -P -DVFRCOMPILE --include $(MODULE_NAME)StrDefs.h

##################
# ASL definitions
##################
*_ELFGCC_*_ASL_PATH               = DEF(UNIX_IASL_BIN)
*_ELFGCC_*_ASL_FLAGS              = DEF(IASL_FLAGS)
*_ELFGCC_*_ASL_OUTFLAGS           = DEF(IASL_OUTFLAGS)
*_ELFGCC_*_ASLPP_FLAGS            = -x c -E -P
*_ELFGCC_*_ASLCC_FLAGS            = -x c
*_ELFGCC_*_ASLDLINK_FLAGS         = DEF(GCC_DLINK_FLAGS_COMMON) --entry _ReferenceAcpiTable

##################
# IA32 definitions
##################
*_ELFGCC_IA32_OBJCOPY_PATH        = DEF(ELFGCC_BIN)/objcopy
*_ELFGCC_IA32_CC_PATH             = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_SLINK_PATH          = DEF(ELFGCC_BIN)/ar
*_ELFGCC_IA32_DLINK_PATH          = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_ASM_PATH            = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_PP_PATH             = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_VFRPP_PATH          = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLCC_PATH          = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLPP_PATH          = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IA32_ASLDLINK_PATH       = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IA32_RC_PATH             = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_IA32_CC_FLAGS            = -m32 -g -fshort-wchar -fno-strict-aliasing -Wall -malign-double -c -include $(DEST_DIR_DEBUG)/AutoGen.h -DSTRING_ARRAY_NAME=$(BASE_NAME)Strings
*_ELFGCC_IA32_SLINK_FLAGS         =
*_ELFGCC_IA32_DLINK_FLAGS         = -melf_i386 -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
#*_ELFGCC_IA32_DLINK_FLAGS        = -melf_i386 -nostdlib -n -q -Ttext 0x220 --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT)
*_ELFGCC_IA32_ASM_FLAGS           = -m32 -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_PP_FLAGS            = -m32 -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IA32_VFRPP_FLAGS         = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_IA32_RC_FLAGS            = DEF(GCC_IA32_RC_FLAGS)
*_ELFGCC_IA32_OBJCOPY_FLAGS       =
*_ELFGCC_IA32_NASM_FLAGS          = -f elf32

##################
# X64 definitions
##################
*_ELFGCC_X64_CC_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_ASLCC_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_SLINK_PATH           = DEF(ELFGCC_BIN)/ar
*_ELFGCC_X64_DLINK_PATH           = DEF(ELFGCC_BIN)/ld
*_ELFGCC_X64_ASLDLINK_PATH        = DEF(ELFGCC_BIN)/ld
*_ELFGCC_X64_ASM_PATH             = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_PP_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_ASLPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_VFRPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_X64_RC_PATH              = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_X64_CC_FLAGS             = -Os -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-address -Wno-array-bounds -c -include AutoGen.h -D_EFI_P64
*_ELFGCC_X64_DLINK_FLAGS          = -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_ELFGCC_X64_SLINK_FLAGS          =
*_ELFGCC_X64_ASM_FLAGS            = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_X64_PP_FLAGS             = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_X64_VFRPP_FLAGS          = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_X64_RC_FLAGS             = DEF(GCC_X64_RC_FLAGS)
*_ELFGCC_X64_NASM_FLAGS           = -f elf64

##################
# IPF definitions
##################
*_ELFGCC_IPF_CC_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_ASLCC_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_SLINK_PATH           = DEF(ELFGCC_BIN)/ar
*_ELFGCC_IPF_DLINK_PATH           = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IPF_ASLDLINK_PATH        = DEF(ELFGCC_BIN)/ld
*_ELFGCC_IPF_ASM_PATH             = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_PP_PATH              = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_ASLPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_VFRPP_PATH           = DEF(ELFGCC_BIN)/gcc
*_ELFGCC_IPF_RC_PATH              = DEF(ELFGCC_BIN)/objcopy

*_ELFGCC_IPF_CC_FLAGS             = -Os -fshort-wchar -Wall -Werror -c -include AutoGen.h -D_EFI_P64
*_ELFGCC_IPF_DLINK_FLAGS          = -nostdlib --shared --entry $(IMAGE_ENTRY_POINT) -u $(IMAGE_ENTRY_POINT) -Map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_ELFGCC_IPF_SLINK_FLAGS          =
*_ELFGCC_IPF_ASM_FLAGS            = -c -x assembler -imacros $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IPF_PP_FLAGS             = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h
*_ELFGCC_IPF_VFRPP_FLAGS          = -x c -E -P -DVFRCOMPILE --include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_ELFGCC_IPF_RC_FLAGS             = DEF(GCC_IPF_RC_FLAGS)


####################################################################################
#
# Clang Support for building on Mac OS X
#
####################################################################################
#   CLANG         - clang that produce Mach-O with EFI x86_64 ABI
*_XCLANG_*_*_FAMILY               = GCC
*_XCLANG_*_*_BUILDRULEFAMILY      = XCODE
*_XCLANG_*_*_BUILDRULEORDER       = S s nasm

*_XCLANG_*_ASL_PATH               = /usr/bin/iasl

*_XCLANG_*_MAKE_PATH              = make
*_XCLANG_*_DSYMUTIL_PATH          = /usr/bin/dsymutil

      *_*_*_MTOC_PATH  = /usr/local/bin/mtoc

  DEBUG_XCLANG_*_MTOC_FLAGS       = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
RELEASE_XCLANG_*_MTOC_FLAGS       = -align 0x20


*_XCLANG_*_CC_PATH                = ENV(CLANG_BIN)clang
*_XCLANG_*_SLINK_PATH             = libtool
*_XCLANG_*_DLINK_PATH             = ld
*_XCLANG_*_ASM_PATH               = as
*_XCLANG_*_PP_PATH                = ENV(CLANG_BIN)clang
*_XCLANG_*_VFRPP_PATH             = ENV(CLANG_BIN)clang
*_XCLANG_*_ASL_PATH               = iasl
*_XCLANG_*_ASLCC_PATH             = ENV(CLANG_BIN)clang
*_XCLANG_*_ASLPP_PATH             = ENV(CLANG_BIN)clang
*_XCLANG_*_ASLDLINK_PATH          = ld

####################
# IA-32 definitions
####################
  DEBUG_XCLANG_IA32_DLINK_FLAGS   = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCLANG_IA32_DLINK_FLAGS   = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_IA32_SLINK_FLAGS         = -static -o
  DEBUG_XCLANG_IA32_ASM_FLAGS     = -arch i386 -g
RELEASE_XCLANG_IA32_ASM_FLAGS     = -arch i386 
*_XCLANG_IA32_NASM_FLAGS          = -f macho32

  DEBUG_XCLANG_IA32_CC_FLAGS      = -arch i386 -c -g -O0  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -mno-sse -mno-mmx -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable  -fasm-blocks  -mms-bitfields -msoft-float -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
RELEASE_XCLANG_IA32_CC_FLAGS      = -arch i386 -c    -Os  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -mno-sse -mno-mmx -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable  -fasm-blocks  -mms-bitfields -msoft-float -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang


##################
# X64 definitions
##################
  DEBUG_XCLANG_X64_DLINK_FLAGS    = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCLANG_X64_DLINK_FLAGS    = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x220 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_X64_SLINK_FLAGS          = -static -o
  DEBUG_XCLANG_X64_ASM_FLAGS      = -arch x86_64 -g
RELEASE_XCLANG_X64_ASM_FLAGS      = -arch x86_64 
*_XCLANG_X64_NASM_FLAGS           = -f macho64
*_XCLANG_*_PP_FLAGS               = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h 
*_XCLANG_*_VFRPP_FLAGS            = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h 


  DEBUG_XCLANG_X64_CC_FLAGS       = -ccc-host-triple x86_64-pc-win32-macho -c -g -O0  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
RELEASE_XCLANG_X64_CC_FLAGS       = -ccc-host-triple x86_64-pc-win32-macho -c    -Os  -Wall -Werror -include AutoGen.h -fno-stack-protector -fno-builtin -fshort-wchar -mdynamic-no-pic -Wno-empty-body -Wno-pointer-sign -Wno-unused-function -Wno-unused-value -Wno-missing-braces -Wno-tautological-compare -Wreturn-type -Wno-unused-variable -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang
*_XCLANG_*_ASLCC_FLAGS            = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h -mdynamic-no-pic
*_XCLANG_*_ASLDLINK_FLAGS         = -e _main -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCLANG_*_ASLPP_FLAGS            = -x c -E 
*_XCLANG_*_ASL_FLAGS              =

#
# XCODE5 support
#

*_XCODE5_*_*_FAMILY               = GCC
*_XCODE5_*_*_BUILDRULEFAMILY      = XCODE
*_XCODE5_*_*_BUILDRULEORDER       = S s nasm

*_XCODE5_*_ASL_PATH               = /usr/bin/iasl

*_XCODE5_*_MAKE_PATH              = make
*_XCODE5_*_DSYMUTIL_PATH          = /usr/bin/dsymutil

  DEBUG_XCODE5_*_MTOC_FLAGS       = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
  NOOPT_XCODE5_*_MTOC_FLAGS       = -align 0x20 -d $(DEBUG_DIR)/$(MODULE_NAME).dll
RELEASE_XCODE5_*_MTOC_FLAGS       = -align 0x20 

#
# use xcode-select to change Xcode version of command line tools
#
*_XCODE5_*_CC_PATH                = clang
*_XCODE5_*_SLINK_PATH             = libtool
*_XCODE5_*_DLINK_PATH             = ld
*_XCODE5_*_ASM_PATH               = as
*_XCODE5_*_PP_PATH                = clang
*_XCODE5_*_VFRPP_PATH             = clang
*_XCODE5_*_ASL_PATH               = iasl
*_XCODE5_*_ASLCC_PATH             = clang
*_XCODE5_*_ASLPP_PATH             = clang
*_XCODE5_*_ASLDLINK_PATH          = ld

####################
# IA-32 definitions
####################
  DEBUG_XCODE5_IA32_DLINK_FLAGS   = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
  NOOPT_XCODE5_IA32_DLINK_FLAGS   = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE5_IA32_DLINK_FLAGS   = -arch i386 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_XCODE5_IA32_SLINK_FLAGS         = -static -o
  DEBUG_XCODE5_IA32_ASM_FLAGS     = -arch i386 -g
  NOOPT_XCODE5_IA32_ASM_FLAGS     = -arch i386 -g
RELEASE_XCODE5_IA32_ASM_FLAGS     = -arch i386 
      *_XCODE5_IA32_NASM_FLAGS    = -f macho32

  DEBUG_XCODE5_IA32_CC_FLAGS      = -arch i386 -c -g -Os       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
RELEASE_XCODE5_IA32_CC_FLAGS      = -arch i386 -c    -Os       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
  NOOPT_XCODE5_IA32_CC_FLAGS      = -arch i386 -c -g -O0       -Wall -Werror -include AutoGen.h -funsigned-char -fno-stack-protector -fno-builtin -fshort-wchar -fasm-blocks -mdynamic-no-pic -mno-implicit-float -mms-bitfields -msoft-float -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)

##################
# X64 definitions
##################
  DEBUG_XCODE5_X64_DLINK_FLAGS    = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
  NOOPT_XCODE5_X64_DLINK_FLAGS    = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
RELEASE_XCODE5_X64_DLINK_FLAGS    = -arch x86_64 -u _$(IMAGE_ENTRY_POINT) -e _$(IMAGE_ENTRY_POINT) -preload -segalign 0x20  -pie -all_load -dead_strip -seg1addr 0x240 -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_XCODE5_X64_SLINK_FLAGS          = -static -o
  DEBUG_XCODE5_X64_ASM_FLAGS      = -arch x86_64 -g
  NOOPT_XCODE5_X64_ASM_FLAGS      = -arch x86_64 -g
RELEASE_XCODE5_X64_ASM_FLAGS      = -arch x86_64 
      *_XCODE5_X64_NASM_FLAGS     = -f macho64
*_XCODE5_*_PP_FLAGS               = -E -x assembler-with-cpp -include $(DEST_DIR_DEBUG)/AutoGen.h 
*_XCODE5_*_VFRPP_FLAGS            = -x c -E -P -DVFRCOMPILE -include $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h 

  DEBUG_XCODE5_X64_CC_FLAGS       = -target x86_64-pc-win32-macho -c -g -Os       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
  NOOPT_XCODE5_X64_CC_FLAGS       = -target x86_64-pc-win32-macho -c -g -O0       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)
RELEASE_XCODE5_X64_CC_FLAGS       = -target x86_64-pc-win32-macho -c    -Os       -Wall -Werror -Wextra -include AutoGen.h -funsigned-char -fno-ms-extensions -fno-stack-protector -fno-builtin -fshort-wchar -mno-implicit-float -mms-bitfields -Wno-unused-parameter -Wno-missing-braces -Wno-missing-field-initializers -Wno-tautological-compare -Wno-sign-compare -ftrap-function=undefined_behavior_has_been_optimized_away_by_clang $(PLATFORM_FLAGS)

*_XCODE5_*_ASLCC_FLAGS            = -x c -save-temps -g -O0 -fshort-wchar -fno-strict-aliasing -Wall -Werror -Wno-missing-braces -c -include AutoGen.h 
*_XCODE5_*_ASLDLINK_FLAGS         = -e _ReferenceAcpiTable -preload -segalign 0x20  -pie -seg1addr 0x240 -read_only_relocs suppress -map $(DEST_DIR_DEBUG)/$(BASE_NAME).map
*_XCODE5_*_ASLPP_FLAGS            = -x c -E 
*_XCODE5_*_ASL_FLAGS              =
*_XCODE5_*_ASL_OUTFLAGS           = DEF(IASL_OUTFLAGS)


####################################################################################
#
# RVCT Common
#
####################################################################################

DEFINE RVCT_ALL_ASM_FLAGS         = --diag_suppress=1786 --diag_error=warning --apcs /interwork
DEFINE RVCT_ALL_CC_FLAGS          = --c90 -c --no_autoinline --asm --gnu --apcs /interwork --signed_chars --no_unaligned_access --split_sections --enum_is_int --preinclude AutoGen.h --diag_suppress=186 --diag_warning 167 --diag_error=warning --diag_style=ide --protect_stack
DEFINE RVCT_ALL_DLINK_FLAGS       = --ro-base 0 --no_scanlib --reloc --no_exceptions --datacompressor off --strict --symbols --diag_style=ide


####################################################################################
#
# ARM RealView Tools - Windows
#
####################################################################################
#   RVCT         - Tools from ARM

*_RVCT_*_*_FAMILY                 = RVCT

#
# Use default values, or override in DSC file
#
*_RVCT_ARM_ARCHCC_FLAGS           = --thumb --fpu=softvfp
*_RVCT_ARM_ARCHASM_FLAGS          = 
*_RVCT_ARM_ARCHDLINK_FLAGS        = 
*_RVCT_ARM_PLATFORM_FLAGS         = --cpu 7-A

  DEBUG_RVCT_ARM_DLINK_FLAGS      = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 
RELEASE_RVCT_ARM_DLINK_FLAGS      = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 

*_RVCT_ARM_ASM_FLAGS              = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_ASM_FLAGS)
*_RVCT_ARM_PP_FLAGS               = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E
*_RVCT_ARM_VFRPP_FLAGS            = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E  -DVFRCOMPILE --preinclude $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_RVCT_ARM_MAKE_PATH              = nmake /NOLOGO
*_RVCT_ARM_SLINK_FLAGS            = --partial -o
  DEBUG_RVCT_ARM_CC_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_CC_FLAGS) -O1 -g
RELEASE_RVCT_ARM_CC_FLAGS         = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) --diag_suppress=550 DEF(RVCT_ALL_CC_FLAGS) -O2

##################
# ARM definitions
##################
*_RVCT_ARM_CC_PATH                = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_SLINK_PATH             = ENV(RVCT_TOOLS_PATH)armlink
*_RVCT_ARM_DLINK_PATH             = ENV(RVCT_TOOLS_PATH)armlink
*_RVCT_ARM_ASM_PATH               = ENV(RVCT_TOOLS_PATH)armasm
*_RVCT_ARM_PP_PATH                = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_VFRPP_PATH             = ENV(RVCT_TOOLS_PATH)armcc
*_RVCT_ARM_FROMELF_PATH           = ENV(RVCT_TOOLS_PATH)fromelf


####################################################################################
#
# ARM RealView Tools - Linux
#
####################################################################################
#   RVCTLINUX         - Tools from ARM in a Cygwin environment
*_RVCTLINUX_*_*_FAMILY            = RVCT
*_RVCTLINUX_*_*_BUILDRULEFAMILY   = RVCTLINUX

*_RVCTLINUX_*_MAKE_PATH           = make

#
# Use default values, or override in DSC file
#
*_RVCTLINUX_ARM_ARCHCC_FLAGS      = --thumb --fpu=softvfp
*_RVCTLINUX_ARM_ARCHASM_FLAGS     = 
*_RVCTLINUX_ARM_ARCHDLINK_FLAGS   = 
*_RVCTLINUX_ARM_PLATFORM_FLAGS    = --cpu 7-A

DEBUG_RVCTLINUX_ARM_DLINK_FLAGS   = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map 
RELEASE_RVCTLINUX_ARM_DLINK_FLAGS = $(ARCHDLINK_FLAGS) DEF(RVCT_ALL_DLINK_FLAGS) --entry $(IMAGE_ENTRY_POINT) --map --list $(DEST_DIR_DEBUG)/$(BASE_NAME).map

*_RVCTLINUX_ARM_ASM_FLAGS         = $(ARCHASM_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_ASM_FLAGS)
*_RVCTLINUX_ARM_PP_FLAGS          = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E
*_RVCTLINUX_ARM_VFRPP_FLAGS       = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) -E  -DVFRCOMPILE --preinclude $(DEST_DIR_DEBUG)/$(MODULE_NAME)StrDefs.h
*_RVCTLINUX_ARM_SLINK_FLAGS       = --partial -o
  DEBUG_RVCTLINUX_ARM_CC_FLAGS    = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) DEF(RVCT_ALL_CC_FLAGS) -O1 -g
RELEASE_RVCTLINUX_ARM_CC_FLAGS    = $(ARCHCC_FLAGS) $(PLATFORM_FLAGS) --diag_suppress=550 DEF(RVCT_ALL_CC_FLAGS) -O2

##################
# ARM definitions
##################
*_RVCTLINUX_ARM_CC_PATH           = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_SLINK_PATH        = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTLINUX_ARM_DLINK_PATH        = ENV(RVCT_TOOLS_PATH)armlink
*_RVCTLINUX_ARM_ASM_PATH          = ENV(RVCT_TOOLS_PATH)armasm
*_RVCTLINUX_ARM_PP_PATH           = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_VFRPP_PATH        = ENV(RVCT_TOOLS_PATH)armcc
*_RVCTLINUX_ARM_FROMELF_PATH      = ENV(RVCT_TOOLS_PATH)fromelf


####################################################################################
#
# MYTOOLS
#   IA32 - Microsoft Visual Studio 2008 Team Suite
#   X64  - Microsoft Visual Studio 2008 Team Suite
#   IPF  - Microsoft Windows DDK 3790.1830
#   EBC  - Intel EFI Byte Code Compiler
#
####################################################################################
#   MYTOOLS          - Settings compatible with previous versions of tools_def.template
*_MYTOOLS_*_*_FAMILY              = MSFT

##################
# ASL definitions
##################
*_MYTOOLS_*_ASL_PATH              = DEF(DEFAULT_WIN_ASL_BIN)
*_MYTOOLS_*_ASL_FLAGS             = DEF(DEFAULT_WIN_ASL_FLAGS)
*_MYTOOLS_*_ASL_OUTFLAGS          = DEF(DEFAULT_WIN_ASL_OUTFLAGS)
*_MYTOOLS_*_ASLCC_FLAGS           = DEF(MSFT_ASLCC_FLAGS)
*_MYTOOLS_*_ASLPP_FLAGS           = DEF(MSFT_ASLPP_FLAGS)
*_MYTOOLS_*_ASLDLINK_FLAGS        = DEF(MSFT_ASLDLINK_FLAGS)

*_MYTOOLS_*_MAKE_FLAGS            = /nologo
*_MYTOOLS_*_VFRPP_FLAGS           = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_*_APP_FLAGS             = /nologo /E /TC
*_MYTOOLS_*_PP_FLAGS              = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_*_SLINK_FLAGS           = /nologo /LTCG

*_MYTOOLS_*_ASM16_PATH            = DEF(VS2008_BIN)\ml.exe

##################
# IA32 definitions
##################
*_MYTOOLS_IA32_*_DLL              = DEF(VS2008_DLL)

*_MYTOOLS_IA32_MAKE_PATH          = DEF(VS2008_BIN)\nmake.exe
*_MYTOOLS_IA32_CC_PATH            = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_SLINK_PATH         = DEF(VS2008_BIN)\lib.exe
*_MYTOOLS_IA32_DLINK_PATH         = DEF(VS2008_BIN)\link.exe
*_MYTOOLS_IA32_PP_PATH            = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_VFRPP_PATH         = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_APP_PATH           = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASM_PATH           = DEF(VS2008_BIN)\ml.exe
*_MYTOOLS_IA32_ASLCC_PATH         = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASLPP_PATH         = DEF(VS2008_BIN)\cl.exe
*_MYTOOLS_IA32_ASLDLINK_PATH      = DEF(VS2008_BIN)\link.exe
*_MYTOOLS_IA32_RC_PATH            = DEF(VS2008_WINSDKx86_BIN)\rc.exe

  DEBUG_MYTOOLS_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_MYTOOLS_IA32_CC_FLAGS     = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_MYTOOLS_IA32_CC_FLAGS       = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od
  DEBUG_MYTOOLS_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /coff /Cx /Zd /Zi
RELEASE_MYTOOLS_IA32_ASM_FLAGS    = /nologo /c /WX /W3 /coff /Cx /Zd
NOOPT_MYTOOLS_IA32_ASM_FLAGS      = /nologo /c /WX /W3 /coff /Cx /Zd /Zi  
  DEBUG_MYTOOLS_IA32_NASM_FLAGS   = -Ox -f win32 -g
RELEASE_MYTOOLS_IA32_NASM_FLAGS   = -Ox -f win32
NOOPT_MYTOOLS_IA32_NASM_FLAGS     = -O0 -f win32 -g
  DEBUG_MYTOOLS_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
RELEASE_MYTOOLS_IA32_DLINK_FLAGS  = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_MYTOOLS_IA32_DLINK_FLAGS    = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:X86 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb

##################
# x64 definitions
##################
*_MYTOOLS_X64_*_DLL               = DEF(VS2008_DLL)

*_MYTOOLS_X64_MAKE_PATH           = DEF(VS2008_BIN)\nmake.exe
*_MYTOOLS_X64_CC_PATH             = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_SLINK_PATH          = DEF(VS2008_BINX64)\lib.exe
*_MYTOOLS_X64_DLINK_PATH          = DEF(VS2008_BINX64)\link.exe
*_MYTOOLS_X64_PP_PATH             = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_VFRPP_PATH          = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_APP_PATH            = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASM_PATH            = DEF(VS2008_BINX64)\ml64.exe
*_MYTOOLS_X64_ASLCC_PATH          = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASLPP_PATH          = DEF(VS2008_BINX64)\cl.exe
*_MYTOOLS_X64_ASLDLINK_PATH       = DEF(VS2008_BINX64)\link.exe
*_MYTOOLS_X64_RC_PATH             = DEF(VS2008_WINSDK_BIN)\rc.exe

  DEBUG_MYTOOLS_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm
RELEASE_MYTOOLS_X64_CC_FLAGS      = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /O1ib2 /GL /FIAutoGen.h /EHs-c- /GR- /GF
NOOPT_MYTOOLS_X64_CC_FLAGS        = /nologo /c /WX /GS- /W4 /Gs32768 /Gy /D UNICODE /FIAutoGen.h /EHs-c- /GR- /GF /Zi /Gm /Od  
  DEBUG_MYTOOLS_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd /Zi
RELEASE_MYTOOLS_X64_ASM_FLAGS     = /nologo /c /WX /W3 /Cx /Zd
NOOPT_MYTOOLS_X64_ASM_FLAGS       = /nologo /c /WX /W3 /Cx /Zd /Zi  
  DEBUG_MYTOOLS_X64_NASM_FLAGS    = -Ox -f win64 -g
RELEASE_MYTOOLS_X64_NASM_FLAGS    = -Ox -f win64
NOOPT_MYTOOLS_X64_NASM_FLAGS      = -O0 -f win64 -g
  DEBUG_MYTOOLS_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG
RELEASE_MYTOOLS_X64_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /IGNORE:4254 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MERGE:.rdata=.data
NOOPT_MYTOOLS_X64_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /IGNORE:4001 /OPT:REF /OPT:ICF=10 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /Machine:X64 /LTCG /DLL /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /DEBUG

##################
# IPF definitions
##################
*_MYTOOLS_IPF_MAKE_PATH           = DEF(WINDDK_BIN32)\nmake.exe
*_MYTOOLS_IPF_CC_PATH             = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_SLINK_PATH          = DEF(WINDDK_BIN64)\lib.exe
*_MYTOOLS_IPF_DLINK_PATH          = DEF(WINDDK_BIN64)\link.exe
*_MYTOOLS_IPF_PP_PATH             = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_VFRPP_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_APP_PATH            = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASM_PATH            = DEF(WINDDK_BIN64)\ias.exe
*_MYTOOLS_IPF_ASLCC_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASLPP_PATH          = DEF(WINDDK_BIN64)\cl.exe
*_MYTOOLS_IPF_ASLDLINK_PATH       = DEF(WINDDK_BIN64)\link.exe
*_MYTOOLS_IPF_RC_PATH             = DEF(WINDDK_BIN32)\rc.exe

      *_MYTOOLS_IPF_ASM_OUTPUT    = "-o "
  DEBUG_MYTOOLS_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /Gy /Ox /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32 /Zi
RELEASE_MYTOOLS_IPF_CC_FLAGS      = /nologo /c /WX /GS- /X /W4 /Gy /Ox /GL /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32
NOOPT_MYTOOLS_IPF_CC_FLAGS        = /nologo /c /WX /GS- /X /W4 /Gy /FIAutoGen.h /EHs-c- /GR- /GF /Zx /QIPF_fr32 /Zi /Od
  DEBUG_MYTOOLS_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4 -d debug
RELEASE_MYTOOLS_IPF_ASM_FLAGS     = -N us -X explicit -M ilp64 -N so -W4
NOOPT_MYTOOLS_IPF_ASM_FLAGS       = -N us -X explicit -M ilp64 -N so -W4 -d debug
  DEBUG_MYTOOLS_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
RELEASE_MYTOOLS_IPF_DLINK_FLAGS   = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb
NOOPT_MYTOOLS_IPF_DLINK_FLAGS     = /NOLOGO /NODEFAULTLIB /LTCG /DLL /OPT:REF /OPT:ICF=10 /IGNORE:4001 /MAP /ALIGN:32 /SECTION:.xdata,D /SECTION:.pdata,D /MACHINE:IA64 /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /SAFESEH:NO /BASE:0 /DRIVER /MAP:$(DEST_DIR_DEBUG)/$(BASE_NAME).map /PDB:$(DEBUG_DIR)/$(BASE_NAME).pdb /DEBUG
      *_MYTOOLS_IPF_SLINK_FLAGS   = /nologo /LTCG

##################
# EBC definitions
##################
*_MYTOOLS_EBC_*_FAMILY            = INTEL

*_MYTOOLS_EBC_MAKE_PATH           = DEF(VS2005_BIN)\nmake.exe
*_MYTOOLS_EBC_PP_PATH             = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_VFRPP_PATH          = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_CC_PATH             = DEF(EBC_BIN)\iec.exe
*_MYTOOLS_EBC_SLINK_PATH          = DEF(EBC_BIN)\link.exe
*_MYTOOLS_EBC_DLINK_PATH          = DEF(EBC_BIN)\link.exe
*_MYTOOLS_EBC_RC_PATH             = DEF(VS2005_BIN)\rc.exe

*_MYTOOLS_EBC_MAKE_FLAGS          = /nologo
*_MYTOOLS_EBC_PP_FLAGS            = /nologo /E /TC /FIAutoGen.h
*_MYTOOLS_EBC_CC_FLAGS            = /nologo /c /WX /W3 /FIAutoGen.h /D$(MODULE_ENTRY_POINT)=$(ARCH_ENTRY_POINT)
*_MYTOOLS_EBC_VFRPP_FLAGS         = /nologo /E /TC /DVFRCOMPILE /FI$(MODULE_NAME)StrDefs.h
*_MYTOOLS_EBC_SLINK_FLAGS         = /lib /NOLOGO /MACHINE:EBC
*_MYTOOLS_EBC_DLINK_FLAGS         = "C:\Program Files\Intel\EBC\Lib\EbcLib.lib" /NOLOGO /NODEFAULTLIB /MACHINE:EBC /OPT:REF /ENTRY:$(IMAGE_ENTRY_POINT) /SUBSYSTEM:EFI_BOOT_SERVICE_DRIVER /MAP /ALIGN:32 /DRIVER


#################
# ASM 16 linker defintions
#################
*_*_*_ASMLINK_PATH                = DEF(WINDDK_BIN16)\link16.exe
*_*_*_ASMLINK_FLAGS               = /nologo /tiny

##################
# VfrCompiler definitions
##################
*_*_*_VFR_PATH                    = VfrCompile
*_*_*_VFR_FLAGS                   = -l -n

##################
# OptionRom tool definitions
##################
*_*_*_OPTROM_PATH                 = EfiRom
*_*_*_OPTROM_FLAGS                = -e

##################
# GenFw tool definitions
##################
*_*_*_GENFW_PATH                  = GenFw
*_*_*_GENFW_FLAGS                 =

##################
# Asl Compiler definitions
##################
*_*_*_ASLCC_FLAGS                 = /nologo /c /FIAutoGen.h /TC /Dmain=ReferenceAcpiTable
*_*_*_ASLDLINK_FLAGS              = /NODEFAULTLIB /ENTRY:ReferenceAcpiTable /SUBSYSTEM:CONSOLE
*_*_*_ASLPP_FLAGS                 = /nologo /EP /C
*_*_*_ASL_FLAGS                   =

##################
# GenCrc32 tool definitions
##################
*_*_*_CRC32_PATH                  = GenCrc32
*_*_*_CRC32_GUID                  = FC1BCDB0-7D31-49AA-936A-A4600D9DD083

##################
# Rsa2048Sha256Sign tool definitions
##################
*_*_*_RSA2048SHA256SIGN_PATH      = Rsa2048Sha256Sign
*_*_*_RSA2048SHA256SIGN_GUID      = A7717414-C616-4977-9420-844712A735BF

##################
# LzmaCompress tool definitions
##################
*_*_*_LZMA_PATH                   = LzmaCompress
*_*_*_LZMA_GUID                   = EE4E5898-3914-4259-9D6E-DC7BD79403CF

##################
# LzmaF86Compress tool definitions with converter for x86 code.
# It can improve the compression ratio if the input file is IA32 or X64 PE image.
# Notes: If X64 PE image is built based on GCC54, it may not get the better compression.
##################
*_*_*_LZMAF86_PATH                = LzmaF86Compress
*_*_*_LZMAF86_GUID                = D42AE6BD-1352-4bfb-909A-CA72A6EAE889

##################
# TianoCompress tool definitions
##################
*_*_*_TIANO_PATH                  = TianoCompress
*_*_*_TIANO_GUID                  = A31280AD-481E-41B6-95E8-127F4C984779

##################
# BPDG tool definitions
##################
*_*_*_VPDTOOL_PATH                = BPDG
*_*_*_VPDTOOL_GUID                = 8C3D856A-9BE6-468E-850A-24F7A8D38E08

##################
# NASM tool definitions
##################
*_*_*_NASM_PATH                   = ENV(NASM_PREFIX)nasm
*_*_*_NASMB_FLAGS                 = -f bin

#################
# Build rule order
#################
*_*_*_*_BUILDRULEORDER            = nasm asm Asm ASM S s
